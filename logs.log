2023-11-06 12:38:13,323:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-06 12:38:13,324:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-06 12:38:13,324:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-06 12:38:13,324:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-06 12:42:34,909:INFO:PyCaret RegressionExperiment
2023-11-06 12:42:34,910:INFO:Logging name: reg-default-name
2023-11-06 12:42:34,910:INFO:ML Usecase: MLUsecase.REGRESSION
2023-11-06 12:42:34,910:INFO:version 3.1.0
2023-11-06 12:42:34,910:INFO:Initializing setup()
2023-11-06 12:42:34,910:INFO:self.USI: 9263
2023-11-06 12:42:34,911:INFO:self._variable_keys: {'fold_generator', 'seed', 'X_test', '_available_plots', 'USI', 'log_plots_param', '_ml_usecase', 'data', 'gpu_n_jobs_param', 'y_train', 'y_test', 'fold_shuffle_param', 'pipeline', 'memory', 'target_param', 'transform_target_param', 'n_jobs_param', 'idx', 'X_train', 'logging_param', 'y', 'exp_id', 'X', 'exp_name_log', 'gpu_param', 'html_param', 'fold_groups_param'}
2023-11-06 12:42:34,911:INFO:Checking environment
2023-11-06 12:42:34,911:INFO:python_version: 3.10.0
2023-11-06 12:42:34,911:INFO:python_build: ('tags/v3.10.0:b494f59', 'Oct  4 2021 19:00:18')
2023-11-06 12:42:34,911:INFO:machine: AMD64
2023-11-06 12:42:34,911:INFO:platform: Windows-10-10.0.19045-SP0
2023-11-06 12:42:34,916:INFO:Memory: svmem(total=17121947648, available=5985341440, percent=65.0, used=11136606208, free=5985341440)
2023-11-06 12:42:34,916:INFO:Physical Core: 4
2023-11-06 12:42:34,916:INFO:Logical Core: 4
2023-11-06 12:42:34,916:INFO:Checking libraries
2023-11-06 12:42:34,916:INFO:System:
2023-11-06 12:42:34,916:INFO:    python: 3.10.0 (tags/v3.10.0:b494f59, Oct  4 2021, 19:00:18) [MSC v.1929 64 bit (AMD64)]
2023-11-06 12:42:34,916:INFO:executable: c:\Users\joseba\AppData\Local\Programs\Python\Python310\python.exe
2023-11-06 12:42:34,916:INFO:   machine: Windows-10-10.0.19045-SP0
2023-11-06 12:42:34,916:INFO:PyCaret required dependencies:
2023-11-06 12:42:35,002:INFO:                 pip: 21.2.3
2023-11-06 12:42:35,002:INFO:          setuptools: 57.4.0
2023-11-06 12:42:35,002:INFO:             pycaret: 3.1.0
2023-11-06 12:42:35,002:INFO:             IPython: 8.17.2
2023-11-06 12:42:35,002:INFO:          ipywidgets: 8.1.1
2023-11-06 12:42:35,002:INFO:                tqdm: 4.66.1
2023-11-06 12:42:35,002:INFO:               numpy: 1.23.5
2023-11-06 12:42:35,002:INFO:              pandas: 1.5.3
2023-11-06 12:42:35,002:INFO:              jinja2: 3.1.2
2023-11-06 12:42:35,002:INFO:               scipy: 1.10.1
2023-11-06 12:42:35,002:INFO:              joblib: 1.3.2
2023-11-06 12:42:35,002:INFO:             sklearn: 1.2.2
2023-11-06 12:42:35,002:INFO:                pyod: 1.1.1
2023-11-06 12:42:35,002:INFO:            imblearn: 0.11.0
2023-11-06 12:42:35,002:INFO:   category_encoders: 2.6.3
2023-11-06 12:42:35,003:INFO:            lightgbm: 4.1.0
2023-11-06 12:42:35,003:INFO:               numba: 0.58.1
2023-11-06 12:42:35,003:INFO:            requests: 2.31.0
2023-11-06 12:42:35,003:INFO:          matplotlib: 3.8.1
2023-11-06 12:42:35,003:INFO:          scikitplot: 0.3.7
2023-11-06 12:42:35,003:INFO:         yellowbrick: 1.5
2023-11-06 12:42:35,003:INFO:              plotly: 5.18.0
2023-11-06 12:42:35,003:INFO:    plotly-resampler: Not installed
2023-11-06 12:42:35,003:INFO:             kaleido: 0.2.1
2023-11-06 12:42:35,003:INFO:           schemdraw: 0.15
2023-11-06 12:42:35,003:INFO:         statsmodels: 0.14.0
2023-11-06 12:42:35,003:INFO:              sktime: 0.21.1
2023-11-06 12:42:35,003:INFO:               tbats: 1.1.3
2023-11-06 12:42:35,003:INFO:            pmdarima: 2.0.4
2023-11-06 12:42:35,004:INFO:              psutil: 5.9.6
2023-11-06 12:42:35,004:INFO:          markupsafe: 2.1.3
2023-11-06 12:42:35,004:INFO:             pickle5: Not installed
2023-11-06 12:42:35,004:INFO:         cloudpickle: 3.0.0
2023-11-06 12:42:35,004:INFO:         deprecation: 2.1.0
2023-11-06 12:42:35,004:INFO:              xxhash: 3.4.1
2023-11-06 12:42:35,004:INFO:           wurlitzer: Not installed
2023-11-06 12:42:35,004:INFO:PyCaret optional dependencies:
2023-11-06 12:42:35,027:INFO:                shap: Not installed
2023-11-06 12:42:35,027:INFO:           interpret: Not installed
2023-11-06 12:42:35,027:INFO:                umap: Not installed
2023-11-06 12:42:35,027:INFO:     ydata_profiling: Not installed
2023-11-06 12:42:35,027:INFO:  explainerdashboard: Not installed
2023-11-06 12:42:35,027:INFO:             autoviz: Not installed
2023-11-06 12:42:35,027:INFO:           fairlearn: Not installed
2023-11-06 12:42:35,027:INFO:          deepchecks: Not installed
2023-11-06 12:42:35,027:INFO:             xgboost: Not installed
2023-11-06 12:42:35,027:INFO:            catboost: Not installed
2023-11-06 12:42:35,028:INFO:              kmodes: Not installed
2023-11-06 12:42:35,028:INFO:             mlxtend: Not installed
2023-11-06 12:42:35,028:INFO:       statsforecast: Not installed
2023-11-06 12:42:35,028:INFO:        tune_sklearn: Not installed
2023-11-06 12:42:35,028:INFO:                 ray: Not installed
2023-11-06 12:42:35,028:INFO:            hyperopt: Not installed
2023-11-06 12:42:35,028:INFO:              optuna: Not installed
2023-11-06 12:42:35,028:INFO:               skopt: Not installed
2023-11-06 12:42:35,028:INFO:              mlflow: Not installed
2023-11-06 12:42:35,028:INFO:              gradio: Not installed
2023-11-06 12:42:35,028:INFO:             fastapi: Not installed
2023-11-06 12:42:35,028:INFO:             uvicorn: Not installed
2023-11-06 12:42:35,028:INFO:              m2cgen: Not installed
2023-11-06 12:42:35,028:INFO:           evidently: Not installed
2023-11-06 12:42:35,028:INFO:               fugue: Not installed
2023-11-06 12:42:35,028:INFO:           streamlit: Not installed
2023-11-06 12:42:35,028:INFO:             prophet: Not installed
2023-11-06 12:42:35,029:INFO:None
2023-11-06 12:42:35,029:INFO:Set up data.
2023-11-06 12:42:35,042:INFO:Set up folding strategy.
2023-11-06 12:42:35,042:INFO:Set up train/test split.
2023-11-06 12:42:35,049:INFO:Set up index.
2023-11-06 12:42:35,049:INFO:Assigning column types.
2023-11-06 12:42:35,054:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-06 12:42:35,054:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-06 12:42:35,065:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-06 12:42:35,075:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-06 12:42:35,207:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-06 12:42:35,329:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-06 12:42:35,330:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 12:42:35,330:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 12:42:35,331:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-06 12:42:35,341:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-06 12:42:35,351:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-06 12:42:35,471:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-06 12:42:35,563:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-06 12:42:35,565:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 12:42:35,566:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 12:42:35,566:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-11-06 12:42:35,611:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-06 12:42:35,626:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-06 12:42:35,878:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-06 12:42:36,143:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-06 12:42:36,146:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 12:42:36,160:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 12:42:36,177:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-06 12:42:36,208:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-06 12:42:36,334:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-06 12:42:36,428:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-06 12:42:36,428:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 12:42:36,429:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 12:42:36,429:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-11-06 12:42:36,450:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-06 12:42:36,601:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-06 12:42:36,695:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-06 12:42:36,696:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 12:42:36,696:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 12:42:36,717:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-06 12:42:36,839:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-06 12:42:36,933:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-06 12:42:36,934:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 12:42:36,934:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 12:42:36,935:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-11-06 12:42:37,223:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-06 12:42:37,336:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-06 12:42:37,336:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 12:42:37,337:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 12:42:37,492:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-06 12:42:37,599:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-06 12:42:37,600:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 12:42:37,601:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 12:42:37,601:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-06 12:42:37,757:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-06 12:42:37,894:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 12:42:37,895:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 12:42:38,045:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-06 12:42:38,150:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 12:42:38,151:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 12:42:38,153:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-11-06 12:42:38,413:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 12:42:38,413:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 12:42:38,661:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 12:42:38,662:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 12:42:38,665:INFO:Preparing preprocessing pipeline...
2023-11-06 12:42:38,665:INFO:Set up simple imputation.
2023-11-06 12:42:38,670:INFO:Set up encoding of categorical features.
2023-11-06 12:42:38,858:INFO:Finished creating preprocessing pipeline.
2023-11-06 12:42:38,872:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\joseba\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['accommodates', 'minimum_nights',
                                             'maximum_nights'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'property_type',
                                             'room_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['room_type'],
                                    transformer=OneHotEncoder(cols=['room_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood', 'property_type'],
                                    transformer=TargetEncoder(cols=['neighbourhood',
                                                                    'property_type'],
                                                              handle_missing='return_nan')))])
2023-11-06 12:42:38,872:INFO:Creating final display dataframe.
2023-11-06 12:42:39,331:INFO:Setup _display_container:                     Description             Value
0                    Session id              8051
1                        Target             price
2                   Target type        Regression
3           Original data shape        (13134, 7)
4        Transformed data shape       (13134, 10)
5   Transformed train set shape        (9193, 10)
6    Transformed test set shape        (3941, 10)
7              Numeric features                 3
8          Categorical features                 3
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              9263
2023-11-06 12:42:39,610:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 12:42:39,611:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 12:42:39,872:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 12:42:39,874:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 12:42:39,875:INFO:setup() successfully completed in 4.97s...............
2023-11-06 13:02:45,274:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-06 13:02:45,274:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-06 13:02:45,274:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-06 13:02:45,274:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-06 13:02:45,545:INFO:PyCaret RegressionExperiment
2023-11-06 13:02:45,545:INFO:Logging name: reg-default-name
2023-11-06 13:02:45,545:INFO:ML Usecase: MLUsecase.REGRESSION
2023-11-06 13:02:45,545:INFO:version 3.1.0
2023-11-06 13:02:45,545:INFO:Initializing setup()
2023-11-06 13:02:45,545:INFO:self.USI: 8346
2023-11-06 13:02:45,545:INFO:self._variable_keys: {'fold_groups_param', 'data', 'exp_name_log', 'seed', 'memory', 'y', 'X_train', 'exp_id', 'pipeline', 'y_test', 'y_train', '_ml_usecase', 'X_test', 'fold_generator', 'n_jobs_param', 'transform_target_param', '_available_plots', 'X', 'gpu_n_jobs_param', 'idx', 'target_param', 'html_param', 'USI', 'log_plots_param', 'gpu_param', 'logging_param', 'fold_shuffle_param'}
2023-11-06 13:02:45,546:INFO:Checking environment
2023-11-06 13:02:45,546:INFO:python_version: 3.10.0
2023-11-06 13:02:45,546:INFO:python_build: ('tags/v3.10.0:b494f59', 'Oct  4 2021 19:00:18')
2023-11-06 13:02:45,546:INFO:machine: AMD64
2023-11-06 13:02:45,546:INFO:platform: Windows-10-10.0.19045-SP0
2023-11-06 13:02:45,551:INFO:Memory: svmem(total=17121947648, available=6389739520, percent=62.7, used=10732208128, free=6389739520)
2023-11-06 13:02:45,551:INFO:Physical Core: 4
2023-11-06 13:02:45,551:INFO:Logical Core: 4
2023-11-06 13:02:45,551:INFO:Checking libraries
2023-11-06 13:02:45,551:INFO:System:
2023-11-06 13:02:45,551:INFO:    python: 3.10.0 (tags/v3.10.0:b494f59, Oct  4 2021, 19:00:18) [MSC v.1929 64 bit (AMD64)]
2023-11-06 13:02:45,551:INFO:executable: c:\Users\joseba\AppData\Local\Programs\Python\Python310\python.exe
2023-11-06 13:02:45,551:INFO:   machine: Windows-10-10.0.19045-SP0
2023-11-06 13:02:45,551:INFO:PyCaret required dependencies:
2023-11-06 13:02:45,582:INFO:                 pip: 21.2.3
2023-11-06 13:02:45,582:INFO:          setuptools: 57.4.0
2023-11-06 13:02:45,582:INFO:             pycaret: 3.1.0
2023-11-06 13:02:45,582:INFO:             IPython: 8.17.2
2023-11-06 13:02:45,582:INFO:          ipywidgets: 8.1.1
2023-11-06 13:02:45,582:INFO:                tqdm: 4.66.1
2023-11-06 13:02:45,582:INFO:               numpy: 1.23.5
2023-11-06 13:02:45,582:INFO:              pandas: 1.5.3
2023-11-06 13:02:45,583:INFO:              jinja2: 3.1.2
2023-11-06 13:02:45,583:INFO:               scipy: 1.10.1
2023-11-06 13:02:45,583:INFO:              joblib: 1.3.2
2023-11-06 13:02:45,583:INFO:             sklearn: 1.2.2
2023-11-06 13:02:45,583:INFO:                pyod: 1.1.1
2023-11-06 13:02:45,583:INFO:            imblearn: 0.11.0
2023-11-06 13:02:45,583:INFO:   category_encoders: 2.6.3
2023-11-06 13:02:45,583:INFO:            lightgbm: 4.1.0
2023-11-06 13:02:45,583:INFO:               numba: 0.58.1
2023-11-06 13:02:45,583:INFO:            requests: 2.31.0
2023-11-06 13:02:45,583:INFO:          matplotlib: 3.8.1
2023-11-06 13:02:45,583:INFO:          scikitplot: 0.3.7
2023-11-06 13:02:45,583:INFO:         yellowbrick: 1.5
2023-11-06 13:02:45,583:INFO:              plotly: 5.18.0
2023-11-06 13:02:45,583:INFO:    plotly-resampler: Not installed
2023-11-06 13:02:45,583:INFO:             kaleido: 0.2.1
2023-11-06 13:02:45,584:INFO:           schemdraw: 0.15
2023-11-06 13:02:45,584:INFO:         statsmodels: 0.14.0
2023-11-06 13:02:45,584:INFO:              sktime: 0.21.1
2023-11-06 13:02:45,584:INFO:               tbats: 1.1.3
2023-11-06 13:02:45,584:INFO:            pmdarima: 2.0.4
2023-11-06 13:02:45,584:INFO:              psutil: 5.9.6
2023-11-06 13:02:45,584:INFO:          markupsafe: 2.1.3
2023-11-06 13:02:45,584:INFO:             pickle5: Not installed
2023-11-06 13:02:45,584:INFO:         cloudpickle: 3.0.0
2023-11-06 13:02:45,584:INFO:         deprecation: 2.1.0
2023-11-06 13:02:45,584:INFO:              xxhash: 3.4.1
2023-11-06 13:02:45,584:INFO:           wurlitzer: Not installed
2023-11-06 13:02:45,584:INFO:PyCaret optional dependencies:
2023-11-06 13:02:45,608:INFO:                shap: Not installed
2023-11-06 13:02:45,609:INFO:           interpret: Not installed
2023-11-06 13:02:45,609:INFO:                umap: Not installed
2023-11-06 13:02:45,609:INFO:     ydata_profiling: Not installed
2023-11-06 13:02:45,609:INFO:  explainerdashboard: Not installed
2023-11-06 13:02:45,609:INFO:             autoviz: Not installed
2023-11-06 13:02:45,609:INFO:           fairlearn: Not installed
2023-11-06 13:02:45,609:INFO:          deepchecks: Not installed
2023-11-06 13:02:45,609:INFO:             xgboost: Not installed
2023-11-06 13:02:45,609:INFO:            catboost: Not installed
2023-11-06 13:02:45,609:INFO:              kmodes: Not installed
2023-11-06 13:02:45,609:INFO:             mlxtend: Not installed
2023-11-06 13:02:45,609:INFO:       statsforecast: Not installed
2023-11-06 13:02:45,609:INFO:        tune_sklearn: Not installed
2023-11-06 13:02:45,609:INFO:                 ray: Not installed
2023-11-06 13:02:45,609:INFO:            hyperopt: Not installed
2023-11-06 13:02:45,610:INFO:              optuna: Not installed
2023-11-06 13:02:45,610:INFO:               skopt: Not installed
2023-11-06 13:02:45,610:INFO:              mlflow: Not installed
2023-11-06 13:02:45,610:INFO:              gradio: Not installed
2023-11-06 13:02:45,610:INFO:             fastapi: Not installed
2023-11-06 13:02:45,610:INFO:             uvicorn: Not installed
2023-11-06 13:02:45,610:INFO:              m2cgen: Not installed
2023-11-06 13:02:45,610:INFO:           evidently: Not installed
2023-11-06 13:02:45,610:INFO:               fugue: Not installed
2023-11-06 13:02:45,610:INFO:           streamlit: Not installed
2023-11-06 13:02:45,610:INFO:             prophet: Not installed
2023-11-06 13:02:45,610:INFO:None
2023-11-06 13:02:45,610:INFO:Set up data.
2023-11-06 13:02:45,625:INFO:Set up folding strategy.
2023-11-06 13:02:45,625:INFO:Set up train/test split.
2023-11-06 13:02:45,633:INFO:Set up index.
2023-11-06 13:02:45,633:INFO:Assigning column types.
2023-11-06 13:02:45,643:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-06 13:02:45,643:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-06 13:02:45,655:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-06 13:02:45,667:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-06 13:02:45,838:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-06 13:02:45,939:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-06 13:02:45,940:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 13:02:45,940:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 13:02:45,941:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-06 13:02:45,951:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-06 13:02:45,961:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-06 13:02:46,108:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-06 13:02:46,205:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-06 13:02:46,206:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 13:02:46,206:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 13:02:46,207:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-11-06 13:02:46,217:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-06 13:02:46,226:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-06 13:02:46,363:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-06 13:02:46,462:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-06 13:02:46,463:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 13:02:46,464:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 13:02:46,474:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-06 13:02:46,485:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-06 13:02:46,610:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-06 13:02:46,711:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-06 13:02:46,712:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 13:02:46,712:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 13:02:46,712:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-11-06 13:02:46,732:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-06 13:02:46,859:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-06 13:02:46,959:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-06 13:02:46,960:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 13:02:46,961:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 13:02:46,982:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-06 13:02:47,107:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-06 13:02:47,211:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-06 13:02:47,212:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 13:02:47,212:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 13:02:47,213:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-11-06 13:02:47,362:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-06 13:02:47,465:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-06 13:02:47,466:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 13:02:47,466:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 13:02:47,618:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-06 13:02:47,728:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-06 13:02:47,729:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 13:02:47,729:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 13:02:47,729:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-06 13:02:47,990:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-06 13:02:48,177:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 13:02:48,177:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 13:02:48,363:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-06 13:02:48,466:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 13:02:48,466:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 13:02:48,467:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-11-06 13:02:48,716:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 13:02:48,717:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 13:02:48,967:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 13:02:48,968:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 13:02:48,970:INFO:Preparing preprocessing pipeline...
2023-11-06 13:02:48,970:INFO:Set up simple imputation.
2023-11-06 13:02:48,981:INFO:Set up encoding of categorical features.
2023-11-06 13:02:49,156:INFO:Finished creating preprocessing pipeline.
2023-11-06 13:02:49,170:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\joseba\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['accommodates', 'minimum_nights',
                                             'maximum_nights'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood_group',
                                             'property_type', 'room_type'],
                                    transformer=SimpleImputer(strateg...ent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['neighbourhood_group',
                                             'room_type'],
                                    transformer=OneHotEncoder(cols=['neighbourhood_group',
                                                                    'room_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['property_type'],
                                    transformer=TargetEncoder(cols=['property_type'],
                                                              handle_missing='return_nan')))])
2023-11-06 13:02:49,171:INFO:Creating final display dataframe.
2023-11-06 13:02:49,572:INFO:Setup _display_container:                     Description             Value
0                    Session id              3802
1                        Target             price
2                   Target type        Regression
3           Original data shape        (13134, 7)
4        Transformed data shape       (13134, 21)
5   Transformed train set shape        (9193, 21)
6    Transformed test set shape        (3941, 21)
7              Numeric features                 3
8          Categorical features                 3
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              8346
2023-11-06 13:02:49,837:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 13:02:49,837:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 13:02:50,080:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 13:02:50,081:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 13:02:50,082:INFO:setup() successfully completed in 4.54s...............
2023-11-06 13:03:23,771:INFO:Initializing compare_models()
2023-11-06 13:03:23,771:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002072D436E30>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000002072D436E30>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-11-06 13:03:23,771:INFO:Checking exceptions
2023-11-06 13:03:23,774:INFO:Preparing display monitor
2023-11-06 13:03:23,814:INFO:Initializing Linear Regression
2023-11-06 13:03:23,814:INFO:Total runtime is 0.0 minutes
2023-11-06 13:03:23,820:INFO:SubProcess create_model() called ==================================
2023-11-06 13:03:23,821:INFO:Initializing create_model()
2023-11-06 13:03:23,821:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002072D436E30>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020719AD6200>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 13:03:23,821:INFO:Checking exceptions
2023-11-06 13:03:23,821:INFO:Importing libraries
2023-11-06 13:03:23,821:INFO:Copying training dataset
2023-11-06 13:03:23,831:INFO:Defining folds
2023-11-06 13:03:23,831:INFO:Declaring metric variables
2023-11-06 13:03:23,836:INFO:Importing untrained model
2023-11-06 13:03:23,841:INFO:Linear Regression Imported successfully
2023-11-06 13:03:23,851:INFO:Starting cross validation
2023-11-06 13:03:23,859:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 13:03:28,353:INFO:Calculating mean and std
2023-11-06 13:03:28,355:INFO:Creating metrics dataframe
2023-11-06 13:03:28,359:INFO:Uploading results into container
2023-11-06 13:03:28,360:INFO:Uploading model into container now
2023-11-06 13:03:28,360:INFO:_master_model_container: 1
2023-11-06 13:03:28,360:INFO:_display_container: 2
2023-11-06 13:03:28,361:INFO:LinearRegression(n_jobs=-1)
2023-11-06 13:03:28,361:INFO:create_model() successfully completed......................................
2023-11-06 13:03:28,436:INFO:SubProcess create_model() end ==================================
2023-11-06 13:03:28,436:INFO:Creating metrics dataframe
2023-11-06 13:03:28,447:INFO:Initializing Lasso Regression
2023-11-06 13:03:28,447:INFO:Total runtime is 0.07721222639083862 minutes
2023-11-06 13:03:28,451:INFO:SubProcess create_model() called ==================================
2023-11-06 13:03:28,452:INFO:Initializing create_model()
2023-11-06 13:03:28,452:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002072D436E30>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020719AD6200>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 13:03:28,452:INFO:Checking exceptions
2023-11-06 13:03:28,452:INFO:Importing libraries
2023-11-06 13:03:28,452:INFO:Copying training dataset
2023-11-06 13:03:28,462:INFO:Defining folds
2023-11-06 13:03:28,463:INFO:Declaring metric variables
2023-11-06 13:03:28,467:INFO:Importing untrained model
2023-11-06 13:03:28,474:INFO:Lasso Regression Imported successfully
2023-11-06 13:03:28,486:INFO:Starting cross validation
2023-11-06 13:03:28,489:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 13:03:29,375:INFO:Calculating mean and std
2023-11-06 13:03:29,377:INFO:Creating metrics dataframe
2023-11-06 13:03:29,383:INFO:Uploading results into container
2023-11-06 13:03:29,385:INFO:Uploading model into container now
2023-11-06 13:03:29,386:INFO:_master_model_container: 2
2023-11-06 13:03:29,386:INFO:_display_container: 2
2023-11-06 13:03:29,386:INFO:Lasso(random_state=3802)
2023-11-06 13:03:29,386:INFO:create_model() successfully completed......................................
2023-11-06 13:03:29,468:INFO:SubProcess create_model() end ==================================
2023-11-06 13:03:29,468:INFO:Creating metrics dataframe
2023-11-06 13:03:29,483:INFO:Initializing Ridge Regression
2023-11-06 13:03:29,484:INFO:Total runtime is 0.09450325965881348 minutes
2023-11-06 13:03:29,489:INFO:SubProcess create_model() called ==================================
2023-11-06 13:03:29,490:INFO:Initializing create_model()
2023-11-06 13:03:29,490:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002072D436E30>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020719AD6200>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 13:03:29,490:INFO:Checking exceptions
2023-11-06 13:03:29,490:INFO:Importing libraries
2023-11-06 13:03:29,490:INFO:Copying training dataset
2023-11-06 13:03:29,499:INFO:Defining folds
2023-11-06 13:03:29,500:INFO:Declaring metric variables
2023-11-06 13:03:29,505:INFO:Importing untrained model
2023-11-06 13:03:29,509:INFO:Ridge Regression Imported successfully
2023-11-06 13:03:29,520:INFO:Starting cross validation
2023-11-06 13:03:29,522:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 13:03:30,400:INFO:Calculating mean and std
2023-11-06 13:03:30,402:INFO:Creating metrics dataframe
2023-11-06 13:03:30,408:INFO:Uploading results into container
2023-11-06 13:03:30,409:INFO:Uploading model into container now
2023-11-06 13:03:30,409:INFO:_master_model_container: 3
2023-11-06 13:03:30,409:INFO:_display_container: 2
2023-11-06 13:03:30,410:INFO:Ridge(random_state=3802)
2023-11-06 13:03:30,410:INFO:create_model() successfully completed......................................
2023-11-06 13:03:30,487:INFO:SubProcess create_model() end ==================================
2023-11-06 13:03:30,487:INFO:Creating metrics dataframe
2023-11-06 13:03:30,502:INFO:Initializing Elastic Net
2023-11-06 13:03:30,502:INFO:Total runtime is 0.11145737965901693 minutes
2023-11-06 13:03:30,506:INFO:SubProcess create_model() called ==================================
2023-11-06 13:03:30,506:INFO:Initializing create_model()
2023-11-06 13:03:30,507:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002072D436E30>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020719AD6200>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 13:03:30,507:INFO:Checking exceptions
2023-11-06 13:03:30,507:INFO:Importing libraries
2023-11-06 13:03:30,507:INFO:Copying training dataset
2023-11-06 13:03:30,516:INFO:Defining folds
2023-11-06 13:03:30,516:INFO:Declaring metric variables
2023-11-06 13:03:30,521:INFO:Importing untrained model
2023-11-06 13:03:30,527:INFO:Elastic Net Imported successfully
2023-11-06 13:03:30,537:INFO:Starting cross validation
2023-11-06 13:03:30,540:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 13:03:31,209:INFO:Calculating mean and std
2023-11-06 13:03:31,211:INFO:Creating metrics dataframe
2023-11-06 13:03:31,215:INFO:Uploading results into container
2023-11-06 13:03:31,216:INFO:Uploading model into container now
2023-11-06 13:03:31,216:INFO:_master_model_container: 4
2023-11-06 13:03:31,216:INFO:_display_container: 2
2023-11-06 13:03:31,216:INFO:ElasticNet(random_state=3802)
2023-11-06 13:03:31,217:INFO:create_model() successfully completed......................................
2023-11-06 13:03:31,289:INFO:SubProcess create_model() end ==================================
2023-11-06 13:03:31,289:INFO:Creating metrics dataframe
2023-11-06 13:03:31,302:INFO:Initializing Least Angle Regression
2023-11-06 13:03:31,303:INFO:Total runtime is 0.1247901201248169 minutes
2023-11-06 13:03:31,307:INFO:SubProcess create_model() called ==================================
2023-11-06 13:03:31,307:INFO:Initializing create_model()
2023-11-06 13:03:31,307:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002072D436E30>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020719AD6200>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 13:03:31,307:INFO:Checking exceptions
2023-11-06 13:03:31,307:INFO:Importing libraries
2023-11-06 13:03:31,307:INFO:Copying training dataset
2023-11-06 13:03:31,317:INFO:Defining folds
2023-11-06 13:03:31,317:INFO:Declaring metric variables
2023-11-06 13:03:31,321:INFO:Importing untrained model
2023-11-06 13:03:31,327:INFO:Least Angle Regression Imported successfully
2023-11-06 13:03:31,337:INFO:Starting cross validation
2023-11-06 13:03:31,340:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 13:03:31,960:INFO:Calculating mean and std
2023-11-06 13:03:31,962:INFO:Creating metrics dataframe
2023-11-06 13:03:31,968:INFO:Uploading results into container
2023-11-06 13:03:31,969:INFO:Uploading model into container now
2023-11-06 13:03:31,969:INFO:_master_model_container: 5
2023-11-06 13:03:31,970:INFO:_display_container: 2
2023-11-06 13:03:31,970:INFO:Lars(random_state=3802)
2023-11-06 13:03:31,970:INFO:create_model() successfully completed......................................
2023-11-06 13:03:32,041:INFO:SubProcess create_model() end ==================================
2023-11-06 13:03:32,042:INFO:Creating metrics dataframe
2023-11-06 13:03:32,055:INFO:Initializing Lasso Least Angle Regression
2023-11-06 13:03:32,056:INFO:Total runtime is 0.1373544653256734 minutes
2023-11-06 13:03:32,060:INFO:SubProcess create_model() called ==================================
2023-11-06 13:03:32,061:INFO:Initializing create_model()
2023-11-06 13:03:32,061:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002072D436E30>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020719AD6200>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 13:03:32,061:INFO:Checking exceptions
2023-11-06 13:03:32,061:INFO:Importing libraries
2023-11-06 13:03:32,061:INFO:Copying training dataset
2023-11-06 13:03:32,069:INFO:Defining folds
2023-11-06 13:03:32,069:INFO:Declaring metric variables
2023-11-06 13:03:32,075:INFO:Importing untrained model
2023-11-06 13:03:32,082:INFO:Lasso Least Angle Regression Imported successfully
2023-11-06 13:03:32,104:INFO:Starting cross validation
2023-11-06 13:03:32,130:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 13:03:32,736:INFO:Calculating mean and std
2023-11-06 13:03:32,738:INFO:Creating metrics dataframe
2023-11-06 13:03:32,745:INFO:Uploading results into container
2023-11-06 13:03:32,745:INFO:Uploading model into container now
2023-11-06 13:03:32,746:INFO:_master_model_container: 6
2023-11-06 13:03:32,746:INFO:_display_container: 2
2023-11-06 13:03:32,746:INFO:LassoLars(random_state=3802)
2023-11-06 13:03:32,746:INFO:create_model() successfully completed......................................
2023-11-06 13:03:32,830:INFO:SubProcess create_model() end ==================================
2023-11-06 13:03:32,830:INFO:Creating metrics dataframe
2023-11-06 13:03:32,844:INFO:Initializing Orthogonal Matching Pursuit
2023-11-06 13:03:32,844:INFO:Total runtime is 0.15049457550048828 minutes
2023-11-06 13:03:32,849:INFO:SubProcess create_model() called ==================================
2023-11-06 13:03:32,849:INFO:Initializing create_model()
2023-11-06 13:03:32,850:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002072D436E30>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020719AD6200>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 13:03:32,850:INFO:Checking exceptions
2023-11-06 13:03:32,850:INFO:Importing libraries
2023-11-06 13:03:32,850:INFO:Copying training dataset
2023-11-06 13:03:32,858:INFO:Defining folds
2023-11-06 13:03:32,858:INFO:Declaring metric variables
2023-11-06 13:03:32,864:INFO:Importing untrained model
2023-11-06 13:03:32,869:INFO:Orthogonal Matching Pursuit Imported successfully
2023-11-06 13:03:32,880:INFO:Starting cross validation
2023-11-06 13:03:32,883:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 13:03:33,554:INFO:Calculating mean and std
2023-11-06 13:03:33,555:INFO:Creating metrics dataframe
2023-11-06 13:03:33,560:INFO:Uploading results into container
2023-11-06 13:03:33,560:INFO:Uploading model into container now
2023-11-06 13:03:33,561:INFO:_master_model_container: 7
2023-11-06 13:03:33,561:INFO:_display_container: 2
2023-11-06 13:03:33,561:INFO:OrthogonalMatchingPursuit()
2023-11-06 13:03:33,561:INFO:create_model() successfully completed......................................
2023-11-06 13:03:33,642:INFO:SubProcess create_model() end ==================================
2023-11-06 13:03:33,642:INFO:Creating metrics dataframe
2023-11-06 13:03:33,658:INFO:Initializing Bayesian Ridge
2023-11-06 13:03:33,658:INFO:Total runtime is 0.16405561367670696 minutes
2023-11-06 13:03:33,664:INFO:SubProcess create_model() called ==================================
2023-11-06 13:03:33,664:INFO:Initializing create_model()
2023-11-06 13:03:33,664:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002072D436E30>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020719AD6200>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 13:03:33,664:INFO:Checking exceptions
2023-11-06 13:03:33,665:INFO:Importing libraries
2023-11-06 13:03:33,665:INFO:Copying training dataset
2023-11-06 13:03:33,672:INFO:Defining folds
2023-11-06 13:03:33,673:INFO:Declaring metric variables
2023-11-06 13:03:33,678:INFO:Importing untrained model
2023-11-06 13:03:33,683:INFO:Bayesian Ridge Imported successfully
2023-11-06 13:03:33,701:INFO:Starting cross validation
2023-11-06 13:03:33,703:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 13:03:34,417:INFO:Calculating mean and std
2023-11-06 13:03:34,419:INFO:Creating metrics dataframe
2023-11-06 13:03:34,424:INFO:Uploading results into container
2023-11-06 13:03:34,425:INFO:Uploading model into container now
2023-11-06 13:03:34,426:INFO:_master_model_container: 8
2023-11-06 13:03:34,426:INFO:_display_container: 2
2023-11-06 13:03:34,426:INFO:BayesianRidge()
2023-11-06 13:03:34,426:INFO:create_model() successfully completed......................................
2023-11-06 13:03:34,504:INFO:SubProcess create_model() end ==================================
2023-11-06 13:03:34,504:INFO:Creating metrics dataframe
2023-11-06 13:03:34,519:INFO:Initializing Passive Aggressive Regressor
2023-11-06 13:03:34,519:INFO:Total runtime is 0.17840704123179119 minutes
2023-11-06 13:03:34,524:INFO:SubProcess create_model() called ==================================
2023-11-06 13:03:34,524:INFO:Initializing create_model()
2023-11-06 13:03:34,524:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002072D436E30>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020719AD6200>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 13:03:34,524:INFO:Checking exceptions
2023-11-06 13:03:34,524:INFO:Importing libraries
2023-11-06 13:03:34,524:INFO:Copying training dataset
2023-11-06 13:03:34,534:INFO:Defining folds
2023-11-06 13:03:34,534:INFO:Declaring metric variables
2023-11-06 13:03:34,538:INFO:Importing untrained model
2023-11-06 13:03:34,549:INFO:Passive Aggressive Regressor Imported successfully
2023-11-06 13:03:34,570:INFO:Starting cross validation
2023-11-06 13:03:34,572:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 13:03:35,252:INFO:Calculating mean and std
2023-11-06 13:03:35,254:INFO:Creating metrics dataframe
2023-11-06 13:03:35,257:INFO:Uploading results into container
2023-11-06 13:03:35,258:INFO:Uploading model into container now
2023-11-06 13:03:35,258:INFO:_master_model_container: 9
2023-11-06 13:03:35,258:INFO:_display_container: 2
2023-11-06 13:03:35,259:INFO:PassiveAggressiveRegressor(random_state=3802)
2023-11-06 13:03:35,259:INFO:create_model() successfully completed......................................
2023-11-06 13:03:35,330:INFO:SubProcess create_model() end ==================================
2023-11-06 13:03:35,331:INFO:Creating metrics dataframe
2023-11-06 13:03:35,346:INFO:Initializing Huber Regressor
2023-11-06 13:03:35,346:INFO:Total runtime is 0.19219438234965008 minutes
2023-11-06 13:03:35,352:INFO:SubProcess create_model() called ==================================
2023-11-06 13:03:35,354:INFO:Initializing create_model()
2023-11-06 13:03:35,354:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002072D436E30>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020719AD6200>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 13:03:35,354:INFO:Checking exceptions
2023-11-06 13:03:35,354:INFO:Importing libraries
2023-11-06 13:03:35,354:INFO:Copying training dataset
2023-11-06 13:03:35,368:INFO:Defining folds
2023-11-06 13:03:35,369:INFO:Declaring metric variables
2023-11-06 13:03:35,374:INFO:Importing untrained model
2023-11-06 13:03:35,381:INFO:Huber Regressor Imported successfully
2023-11-06 13:03:35,392:INFO:Starting cross validation
2023-11-06 13:03:35,395:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 13:03:35,961:WARNING:c:\Users\joseba\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-06 13:03:35,989:WARNING:c:\Users\joseba\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-06 13:03:35,991:WARNING:c:\Users\joseba\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-06 13:03:36,002:WARNING:c:\Users\joseba\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-06 13:03:36,545:WARNING:c:\Users\joseba\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-06 13:03:36,558:WARNING:c:\Users\joseba\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-06 13:03:36,561:WARNING:c:\Users\joseba\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-06 13:03:36,602:WARNING:c:\Users\joseba\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-06 13:03:36,948:WARNING:c:\Users\joseba\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-06 13:03:36,954:WARNING:c:\Users\joseba\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-06 13:03:36,999:INFO:Calculating mean and std
2023-11-06 13:03:37,001:INFO:Creating metrics dataframe
2023-11-06 13:03:37,005:INFO:Uploading results into container
2023-11-06 13:03:37,006:INFO:Uploading model into container now
2023-11-06 13:03:37,007:INFO:_master_model_container: 10
2023-11-06 13:03:37,007:INFO:_display_container: 2
2023-11-06 13:03:37,008:INFO:HuberRegressor()
2023-11-06 13:03:37,008:INFO:create_model() successfully completed......................................
2023-11-06 13:03:37,082:INFO:SubProcess create_model() end ==================================
2023-11-06 13:03:37,082:INFO:Creating metrics dataframe
2023-11-06 13:03:37,097:INFO:Initializing K Neighbors Regressor
2023-11-06 13:03:37,097:INFO:Total runtime is 0.22138257424036664 minutes
2023-11-06 13:03:37,102:INFO:SubProcess create_model() called ==================================
2023-11-06 13:03:37,103:INFO:Initializing create_model()
2023-11-06 13:03:37,103:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002072D436E30>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020719AD6200>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 13:03:37,103:INFO:Checking exceptions
2023-11-06 13:03:37,103:INFO:Importing libraries
2023-11-06 13:03:37,103:INFO:Copying training dataset
2023-11-06 13:03:37,112:INFO:Defining folds
2023-11-06 13:03:37,112:INFO:Declaring metric variables
2023-11-06 13:03:37,118:INFO:Importing untrained model
2023-11-06 13:03:37,123:INFO:K Neighbors Regressor Imported successfully
2023-11-06 13:03:37,135:INFO:Starting cross validation
2023-11-06 13:03:37,137:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 13:03:37,991:INFO:Calculating mean and std
2023-11-06 13:03:37,993:INFO:Creating metrics dataframe
2023-11-06 13:03:38,000:INFO:Uploading results into container
2023-11-06 13:03:38,000:INFO:Uploading model into container now
2023-11-06 13:03:38,001:INFO:_master_model_container: 11
2023-11-06 13:03:38,001:INFO:_display_container: 2
2023-11-06 13:03:38,001:INFO:KNeighborsRegressor(n_jobs=-1)
2023-11-06 13:03:38,001:INFO:create_model() successfully completed......................................
2023-11-06 13:03:38,082:INFO:SubProcess create_model() end ==================================
2023-11-06 13:03:38,082:INFO:Creating metrics dataframe
2023-11-06 13:03:38,105:INFO:Initializing Decision Tree Regressor
2023-11-06 13:03:38,105:INFO:Total runtime is 0.23817456165949505 minutes
2023-11-06 13:03:38,110:INFO:SubProcess create_model() called ==================================
2023-11-06 13:03:38,110:INFO:Initializing create_model()
2023-11-06 13:03:38,111:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002072D436E30>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020719AD6200>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 13:03:38,111:INFO:Checking exceptions
2023-11-06 13:03:38,111:INFO:Importing libraries
2023-11-06 13:03:38,111:INFO:Copying training dataset
2023-11-06 13:03:38,120:INFO:Defining folds
2023-11-06 13:03:38,120:INFO:Declaring metric variables
2023-11-06 13:03:38,125:INFO:Importing untrained model
2023-11-06 13:03:38,131:INFO:Decision Tree Regressor Imported successfully
2023-11-06 13:03:38,142:INFO:Starting cross validation
2023-11-06 13:03:38,145:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 13:03:38,828:INFO:Calculating mean and std
2023-11-06 13:03:38,830:INFO:Creating metrics dataframe
2023-11-06 13:03:38,834:INFO:Uploading results into container
2023-11-06 13:03:38,836:INFO:Uploading model into container now
2023-11-06 13:03:38,837:INFO:_master_model_container: 12
2023-11-06 13:03:38,837:INFO:_display_container: 2
2023-11-06 13:03:38,837:INFO:DecisionTreeRegressor(random_state=3802)
2023-11-06 13:03:38,837:INFO:create_model() successfully completed......................................
2023-11-06 13:03:38,912:INFO:SubProcess create_model() end ==================================
2023-11-06 13:03:38,913:INFO:Creating metrics dataframe
2023-11-06 13:03:38,929:INFO:Initializing Random Forest Regressor
2023-11-06 13:03:38,930:INFO:Total runtime is 0.2519269625345866 minutes
2023-11-06 13:03:38,936:INFO:SubProcess create_model() called ==================================
2023-11-06 13:03:38,936:INFO:Initializing create_model()
2023-11-06 13:03:38,936:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002072D436E30>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020719AD6200>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 13:03:38,937:INFO:Checking exceptions
2023-11-06 13:03:38,937:INFO:Importing libraries
2023-11-06 13:03:38,937:INFO:Copying training dataset
2023-11-06 13:03:38,945:INFO:Defining folds
2023-11-06 13:03:38,946:INFO:Declaring metric variables
2023-11-06 13:03:38,951:INFO:Importing untrained model
2023-11-06 13:03:38,957:INFO:Random Forest Regressor Imported successfully
2023-11-06 13:03:38,967:INFO:Starting cross validation
2023-11-06 13:03:38,969:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 13:03:46,810:INFO:Calculating mean and std
2023-11-06 13:03:46,813:INFO:Creating metrics dataframe
2023-11-06 13:03:46,818:INFO:Uploading results into container
2023-11-06 13:03:46,819:INFO:Uploading model into container now
2023-11-06 13:03:46,819:INFO:_master_model_container: 13
2023-11-06 13:03:46,820:INFO:_display_container: 2
2023-11-06 13:03:46,820:INFO:RandomForestRegressor(n_jobs=-1, random_state=3802)
2023-11-06 13:03:46,821:INFO:create_model() successfully completed......................................
2023-11-06 13:03:46,894:INFO:SubProcess create_model() end ==================================
2023-11-06 13:03:46,894:INFO:Creating metrics dataframe
2023-11-06 13:03:46,911:INFO:Initializing Extra Trees Regressor
2023-11-06 13:03:46,911:INFO:Total runtime is 0.38495295445124306 minutes
2023-11-06 13:03:46,916:INFO:SubProcess create_model() called ==================================
2023-11-06 13:03:46,916:INFO:Initializing create_model()
2023-11-06 13:03:46,916:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002072D436E30>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020719AD6200>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 13:03:46,916:INFO:Checking exceptions
2023-11-06 13:03:46,916:INFO:Importing libraries
2023-11-06 13:03:46,916:INFO:Copying training dataset
2023-11-06 13:03:46,926:INFO:Defining folds
2023-11-06 13:03:46,926:INFO:Declaring metric variables
2023-11-06 13:03:46,933:INFO:Importing untrained model
2023-11-06 13:03:46,939:INFO:Extra Trees Regressor Imported successfully
2023-11-06 13:03:47,004:INFO:Starting cross validation
2023-11-06 13:03:47,007:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 13:03:54,343:INFO:Calculating mean and std
2023-11-06 13:03:54,345:INFO:Creating metrics dataframe
2023-11-06 13:03:54,352:INFO:Uploading results into container
2023-11-06 13:03:54,353:INFO:Uploading model into container now
2023-11-06 13:03:54,353:INFO:_master_model_container: 14
2023-11-06 13:03:54,354:INFO:_display_container: 2
2023-11-06 13:03:54,354:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=3802)
2023-11-06 13:03:54,354:INFO:create_model() successfully completed......................................
2023-11-06 13:03:54,432:INFO:SubProcess create_model() end ==================================
2023-11-06 13:03:54,432:INFO:Creating metrics dataframe
2023-11-06 13:03:54,449:INFO:Initializing AdaBoost Regressor
2023-11-06 13:03:54,449:INFO:Total runtime is 0.5105777581532795 minutes
2023-11-06 13:03:54,454:INFO:SubProcess create_model() called ==================================
2023-11-06 13:03:54,455:INFO:Initializing create_model()
2023-11-06 13:03:54,455:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002072D436E30>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020719AD6200>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 13:03:54,455:INFO:Checking exceptions
2023-11-06 13:03:54,455:INFO:Importing libraries
2023-11-06 13:03:54,455:INFO:Copying training dataset
2023-11-06 13:03:54,463:INFO:Defining folds
2023-11-06 13:03:54,463:INFO:Declaring metric variables
2023-11-06 13:03:54,468:INFO:Importing untrained model
2023-11-06 13:03:54,473:INFO:AdaBoost Regressor Imported successfully
2023-11-06 13:03:54,485:INFO:Starting cross validation
2023-11-06 13:03:54,487:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 13:03:55,637:INFO:Calculating mean and std
2023-11-06 13:03:55,639:INFO:Creating metrics dataframe
2023-11-06 13:03:55,645:INFO:Uploading results into container
2023-11-06 13:03:55,646:INFO:Uploading model into container now
2023-11-06 13:03:55,646:INFO:_master_model_container: 15
2023-11-06 13:03:55,646:INFO:_display_container: 2
2023-11-06 13:03:55,646:INFO:AdaBoostRegressor(random_state=3802)
2023-11-06 13:03:55,647:INFO:create_model() successfully completed......................................
2023-11-06 13:03:55,723:INFO:SubProcess create_model() end ==================================
2023-11-06 13:03:55,723:INFO:Creating metrics dataframe
2023-11-06 13:03:55,740:INFO:Initializing Gradient Boosting Regressor
2023-11-06 13:03:55,740:INFO:Total runtime is 0.5321009675661722 minutes
2023-11-06 13:03:55,745:INFO:SubProcess create_model() called ==================================
2023-11-06 13:03:55,745:INFO:Initializing create_model()
2023-11-06 13:03:55,745:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002072D436E30>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020719AD6200>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 13:03:55,745:INFO:Checking exceptions
2023-11-06 13:03:55,745:INFO:Importing libraries
2023-11-06 13:03:55,746:INFO:Copying training dataset
2023-11-06 13:03:55,755:INFO:Defining folds
2023-11-06 13:03:55,755:INFO:Declaring metric variables
2023-11-06 13:03:55,761:INFO:Importing untrained model
2023-11-06 13:03:55,767:INFO:Gradient Boosting Regressor Imported successfully
2023-11-06 13:03:55,779:INFO:Starting cross validation
2023-11-06 13:03:55,781:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 13:03:58,097:INFO:Calculating mean and std
2023-11-06 13:03:58,100:INFO:Creating metrics dataframe
2023-11-06 13:03:58,105:INFO:Uploading results into container
2023-11-06 13:03:58,106:INFO:Uploading model into container now
2023-11-06 13:03:58,106:INFO:_master_model_container: 16
2023-11-06 13:03:58,106:INFO:_display_container: 2
2023-11-06 13:03:58,107:INFO:GradientBoostingRegressor(random_state=3802)
2023-11-06 13:03:58,107:INFO:create_model() successfully completed......................................
2023-11-06 13:03:58,180:INFO:SubProcess create_model() end ==================================
2023-11-06 13:03:58,180:INFO:Creating metrics dataframe
2023-11-06 13:03:58,196:INFO:Initializing Light Gradient Boosting Machine
2023-11-06 13:03:58,196:INFO:Total runtime is 0.5730337738990783 minutes
2023-11-06 13:03:58,201:INFO:SubProcess create_model() called ==================================
2023-11-06 13:03:58,201:INFO:Initializing create_model()
2023-11-06 13:03:58,201:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002072D436E30>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020719AD6200>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 13:03:58,201:INFO:Checking exceptions
2023-11-06 13:03:58,201:INFO:Importing libraries
2023-11-06 13:03:58,202:INFO:Copying training dataset
2023-11-06 13:03:58,211:INFO:Defining folds
2023-11-06 13:03:58,211:INFO:Declaring metric variables
2023-11-06 13:03:58,217:INFO:Importing untrained model
2023-11-06 13:03:58,222:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-06 13:03:58,233:INFO:Starting cross validation
2023-11-06 13:03:58,239:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 13:03:59,567:INFO:Calculating mean and std
2023-11-06 13:03:59,569:INFO:Creating metrics dataframe
2023-11-06 13:03:59,573:INFO:Uploading results into container
2023-11-06 13:03:59,574:INFO:Uploading model into container now
2023-11-06 13:03:59,574:INFO:_master_model_container: 17
2023-11-06 13:03:59,575:INFO:_display_container: 2
2023-11-06 13:03:59,575:INFO:LGBMRegressor(n_jobs=-1, random_state=3802)
2023-11-06 13:03:59,575:INFO:create_model() successfully completed......................................
2023-11-06 13:03:59,669:INFO:SubProcess create_model() end ==================================
2023-11-06 13:03:59,671:INFO:Creating metrics dataframe
2023-11-06 13:03:59,692:INFO:Initializing Dummy Regressor
2023-11-06 13:03:59,692:INFO:Total runtime is 0.5979573527971903 minutes
2023-11-06 13:03:59,697:INFO:SubProcess create_model() called ==================================
2023-11-06 13:03:59,697:INFO:Initializing create_model()
2023-11-06 13:03:59,698:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002072D436E30>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020719AD6200>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 13:03:59,698:INFO:Checking exceptions
2023-11-06 13:03:59,698:INFO:Importing libraries
2023-11-06 13:03:59,698:INFO:Copying training dataset
2023-11-06 13:03:59,706:INFO:Defining folds
2023-11-06 13:03:59,706:INFO:Declaring metric variables
2023-11-06 13:03:59,711:INFO:Importing untrained model
2023-11-06 13:03:59,716:INFO:Dummy Regressor Imported successfully
2023-11-06 13:03:59,731:INFO:Starting cross validation
2023-11-06 13:03:59,733:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 13:04:00,333:INFO:Calculating mean and std
2023-11-06 13:04:00,335:INFO:Creating metrics dataframe
2023-11-06 13:04:00,341:INFO:Uploading results into container
2023-11-06 13:04:00,341:INFO:Uploading model into container now
2023-11-06 13:04:00,342:INFO:_master_model_container: 18
2023-11-06 13:04:00,342:INFO:_display_container: 2
2023-11-06 13:04:00,342:INFO:DummyRegressor()
2023-11-06 13:04:00,343:INFO:create_model() successfully completed......................................
2023-11-06 13:04:00,414:INFO:SubProcess create_model() end ==================================
2023-11-06 13:04:00,414:INFO:Creating metrics dataframe
2023-11-06 13:04:00,447:INFO:Initializing create_model()
2023-11-06 13:04:00,447:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002072D436E30>, estimator=LGBMRegressor(n_jobs=-1, random_state=3802), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-06 13:04:00,447:INFO:Checking exceptions
2023-11-06 13:04:00,449:INFO:Importing libraries
2023-11-06 13:04:00,449:INFO:Copying training dataset
2023-11-06 13:04:00,458:INFO:Defining folds
2023-11-06 13:04:00,458:INFO:Declaring metric variables
2023-11-06 13:04:00,458:INFO:Importing untrained model
2023-11-06 13:04:00,458:INFO:Declaring custom model
2023-11-06 13:04:00,459:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-06 13:04:00,462:INFO:Cross validation set to False
2023-11-06 13:04:00,462:INFO:Fitting Model
2023-11-06 13:04:00,588:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2023-11-06 13:04:00,589:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000084 seconds.
2023-11-06 13:04:00,589:INFO:You can set `force_row_wise=true` to remove the overhead.
2023-11-06 13:04:00,589:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2023-11-06 13:04:00,589:INFO:[LightGBM] [Info] Total Bins 276
2023-11-06 13:04:00,589:INFO:[LightGBM] [Info] Number of data points in the train set: 9193, number of used features: 20
2023-11-06 13:04:00,589:INFO:[LightGBM] [Info] Start training from score 106.178437
2023-11-06 13:04:00,640:INFO:LGBMRegressor(n_jobs=-1, random_state=3802)
2023-11-06 13:04:00,640:INFO:create_model() successfully completed......................................
2023-11-06 13:04:00,753:INFO:_master_model_container: 18
2023-11-06 13:04:00,753:INFO:_display_container: 2
2023-11-06 13:04:00,753:INFO:LGBMRegressor(n_jobs=-1, random_state=3802)
2023-11-06 13:04:00,754:INFO:compare_models() successfully completed......................................
2023-11-06 13:07:07,556:INFO:Initializing create_model()
2023-11-06 13:07:07,556:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002072D436E30>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-06 13:07:07,557:INFO:Checking exceptions
2023-11-06 13:07:07,574:INFO:Importing libraries
2023-11-06 13:07:07,574:INFO:Copying training dataset
2023-11-06 13:07:07,584:INFO:Defining folds
2023-11-06 13:07:07,584:INFO:Declaring metric variables
2023-11-06 13:07:07,589:INFO:Importing untrained model
2023-11-06 13:07:07,594:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-06 13:07:07,607:INFO:Starting cross validation
2023-11-06 13:07:07,608:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 13:07:09,143:INFO:Calculating mean and std
2023-11-06 13:07:09,144:INFO:Creating metrics dataframe
2023-11-06 13:07:09,153:INFO:Finalizing model
2023-11-06 13:07:09,271:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2023-11-06 13:07:09,272:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000073 seconds.
2023-11-06 13:07:09,272:INFO:You can set `force_row_wise=true` to remove the overhead.
2023-11-06 13:07:09,272:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2023-11-06 13:07:09,272:INFO:[LightGBM] [Info] Total Bins 276
2023-11-06 13:07:09,272:INFO:[LightGBM] [Info] Number of data points in the train set: 9193, number of used features: 20
2023-11-06 13:07:09,273:INFO:[LightGBM] [Info] Start training from score 106.178437
2023-11-06 13:07:09,341:INFO:Uploading results into container
2023-11-06 13:07:09,343:INFO:Uploading model into container now
2023-11-06 13:07:09,357:INFO:_master_model_container: 19
2023-11-06 13:07:09,357:INFO:_display_container: 3
2023-11-06 13:07:09,358:INFO:LGBMRegressor(n_jobs=-1, random_state=3802)
2023-11-06 13:07:09,358:INFO:create_model() successfully completed......................................
2023-11-06 13:07:25,846:INFO:Initializing tune_model()
2023-11-06 13:07:25,846:INFO:tune_model(estimator=LGBMRegressor(n_jobs=-1, random_state=3802), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002072D436E30>)
2023-11-06 13:07:25,846:INFO:Checking exceptions
2023-11-06 13:07:25,867:INFO:Copying training dataset
2023-11-06 13:07:25,875:INFO:Checking base model
2023-11-06 13:07:25,875:INFO:Base model : Light Gradient Boosting Machine
2023-11-06 13:07:25,879:INFO:Declaring metric variables
2023-11-06 13:07:25,884:INFO:Defining Hyperparameters
2023-11-06 13:07:26,003:INFO:Tuning with n_jobs=-1
2023-11-06 13:07:26,003:INFO:Initializing RandomizedSearchCV
2023-11-06 13:07:47,545:INFO:best_params: {'actual_estimator__reg_lambda': 10, 'actual_estimator__reg_alpha': 0.001, 'actual_estimator__num_leaves': 256, 'actual_estimator__n_estimators': 120, 'actual_estimator__min_split_gain': 0.3, 'actual_estimator__min_child_samples': 76, 'actual_estimator__learning_rate': 0.2, 'actual_estimator__feature_fraction': 0.6, 'actual_estimator__bagging_freq': 0, 'actual_estimator__bagging_fraction': 1.0}
2023-11-06 13:07:47,547:INFO:Hyperparameter search completed
2023-11-06 13:07:47,547:INFO:SubProcess create_model() called ==================================
2023-11-06 13:07:47,548:INFO:Initializing create_model()
2023-11-06 13:07:47,548:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002072D436E30>, estimator=LGBMRegressor(n_jobs=-1, random_state=3802), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020721D34A00>, model_only=True, return_train_score=False, kwargs={'reg_lambda': 10, 'reg_alpha': 0.001, 'num_leaves': 256, 'n_estimators': 120, 'min_split_gain': 0.3, 'min_child_samples': 76, 'learning_rate': 0.2, 'feature_fraction': 0.6, 'bagging_freq': 0, 'bagging_fraction': 1.0})
2023-11-06 13:07:47,548:INFO:Checking exceptions
2023-11-06 13:07:47,549:INFO:Importing libraries
2023-11-06 13:07:47,549:INFO:Copying training dataset
2023-11-06 13:07:47,558:INFO:Defining folds
2023-11-06 13:07:47,558:INFO:Declaring metric variables
2023-11-06 13:07:47,563:INFO:Importing untrained model
2023-11-06 13:07:47,564:INFO:Declaring custom model
2023-11-06 13:07:47,570:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-06 13:07:47,580:INFO:Starting cross validation
2023-11-06 13:07:47,582:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 13:07:49,557:INFO:Calculating mean and std
2023-11-06 13:07:49,559:INFO:Creating metrics dataframe
2023-11-06 13:07:49,567:INFO:Finalizing model
2023-11-06 13:07:49,735:INFO:[LightGBM] [Warning] feature_fraction is set=0.6, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.6
2023-11-06 13:07:49,735:INFO:[LightGBM] [Warning] bagging_fraction is set=1.0, subsample=1.0 will be ignored. Current value: bagging_fraction=1.0
2023-11-06 13:07:49,736:INFO:[LightGBM] [Warning] bagging_freq is set=0, subsample_freq=0 will be ignored. Current value: bagging_freq=0
2023-11-06 13:07:49,741:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2023-11-06 13:07:49,742:INFO:[LightGBM] [Warning] feature_fraction is set=0.6, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.6
2023-11-06 13:07:49,742:INFO:[LightGBM] [Warning] bagging_fraction is set=1.0, subsample=1.0 will be ignored. Current value: bagging_fraction=1.0
2023-11-06 13:07:49,742:INFO:[LightGBM] [Warning] bagging_freq is set=0, subsample_freq=0 will be ignored. Current value: bagging_freq=0
2023-11-06 13:07:49,742:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000332 seconds.
2023-11-06 13:07:49,743:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-11-06 13:07:49,743:INFO:[LightGBM] [Info] Total Bins 274
2023-11-06 13:07:49,743:INFO:[LightGBM] [Info] Number of data points in the train set: 9193, number of used features: 19
2023-11-06 13:07:49,743:INFO:[LightGBM] [Info] Start training from score 106.178437
2023-11-06 13:07:49,744:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,746:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,747:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,748:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,749:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,750:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,752:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,753:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,754:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,756:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,757:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,758:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,760:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,762:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,766:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,768:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,770:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,772:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,774:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,775:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,777:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,779:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,780:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,782:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,784:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,785:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,786:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,788:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,790:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,792:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,794:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,796:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,802:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,804:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,805:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,806:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,808:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,809:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,811:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,812:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,813:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,815:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,817:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,818:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,820:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,821:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,823:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,824:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,826:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,827:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,828:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,830:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,832:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,834:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,835:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,837:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,839:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,840:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,842:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,844:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,846:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,848:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,850:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,854:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,855:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,858:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,859:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,861:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,863:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,864:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,866:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,868:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,870:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,871:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,875:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,876:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,878:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,880:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,881:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,882:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,884:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,886:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,887:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,889:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,890:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,891:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,893:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,895:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,898:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,899:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,900:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,901:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,905:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,906:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,907:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,909:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,911:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,913:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,914:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,916:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,919:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,920:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,922:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,923:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,925:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,926:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,927:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,928:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,930:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,932:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,934:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,935:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,937:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-06 13:07:49,959:INFO:Uploading results into container
2023-11-06 13:07:49,961:INFO:Uploading model into container now
2023-11-06 13:07:49,961:INFO:_master_model_container: 20
2023-11-06 13:07:49,961:INFO:_display_container: 4
2023-11-06 13:07:49,962:INFO:LGBMRegressor(bagging_fraction=1.0, bagging_freq=0, feature_fraction=0.6,
              learning_rate=0.2, min_child_samples=76, min_split_gain=0.3,
              n_estimators=120, n_jobs=-1, num_leaves=256, random_state=3802,
              reg_alpha=0.001, reg_lambda=10)
2023-11-06 13:07:49,962:INFO:create_model() successfully completed......................................
2023-11-06 13:07:50,053:INFO:SubProcess create_model() end ==================================
2023-11-06 13:07:50,053:INFO:choose_better activated
2023-11-06 13:07:50,059:INFO:SubProcess create_model() called ==================================
2023-11-06 13:07:50,059:INFO:Initializing create_model()
2023-11-06 13:07:50,060:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002072D436E30>, estimator=LGBMRegressor(n_jobs=-1, random_state=3802), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-06 13:07:50,060:INFO:Checking exceptions
2023-11-06 13:07:50,062:INFO:Importing libraries
2023-11-06 13:07:50,062:INFO:Copying training dataset
2023-11-06 13:07:50,068:INFO:Defining folds
2023-11-06 13:07:50,068:INFO:Declaring metric variables
2023-11-06 13:07:50,069:INFO:Importing untrained model
2023-11-06 13:07:50,069:INFO:Declaring custom model
2023-11-06 13:07:50,070:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-06 13:07:50,071:INFO:Starting cross validation
2023-11-06 13:07:50,073:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 13:07:51,429:INFO:Calculating mean and std
2023-11-06 13:07:51,430:INFO:Creating metrics dataframe
2023-11-06 13:07:51,432:INFO:Finalizing model
2023-11-06 13:07:51,554:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2023-11-06 13:07:51,555:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000140 seconds.
2023-11-06 13:07:51,555:INFO:You can set `force_row_wise=true` to remove the overhead.
2023-11-06 13:07:51,555:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2023-11-06 13:07:51,555:INFO:[LightGBM] [Info] Total Bins 276
2023-11-06 13:07:51,555:INFO:[LightGBM] [Info] Number of data points in the train set: 9193, number of used features: 20
2023-11-06 13:07:51,555:INFO:[LightGBM] [Info] Start training from score 106.178437
2023-11-06 13:07:51,649:INFO:Uploading results into container
2023-11-06 13:07:51,650:INFO:Uploading model into container now
2023-11-06 13:07:51,650:INFO:_master_model_container: 21
2023-11-06 13:07:51,650:INFO:_display_container: 5
2023-11-06 13:07:51,651:INFO:LGBMRegressor(n_jobs=-1, random_state=3802)
2023-11-06 13:07:51,651:INFO:create_model() successfully completed......................................
2023-11-06 13:07:51,721:INFO:SubProcess create_model() end ==================================
2023-11-06 13:07:51,722:INFO:LGBMRegressor(n_jobs=-1, random_state=3802) result for R2 is 0.6372
2023-11-06 13:07:51,724:INFO:LGBMRegressor(bagging_fraction=1.0, bagging_freq=0, feature_fraction=0.6,
              learning_rate=0.2, min_child_samples=76, min_split_gain=0.3,
              n_estimators=120, n_jobs=-1, num_leaves=256, random_state=3802,
              reg_alpha=0.001, reg_lambda=10) result for R2 is 0.6293
2023-11-06 13:07:51,724:INFO:LGBMRegressor(n_jobs=-1, random_state=3802) is best model
2023-11-06 13:07:51,725:INFO:choose_better completed
2023-11-06 13:07:51,725:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-11-06 13:07:51,737:INFO:_master_model_container: 21
2023-11-06 13:07:51,737:INFO:_display_container: 4
2023-11-06 13:07:51,738:INFO:LGBMRegressor(n_jobs=-1, random_state=3802)
2023-11-06 13:07:51,738:INFO:tune_model() successfully completed......................................
2023-11-06 13:08:14,615:INFO:Initializing evaluate_model()
2023-11-06 13:08:14,615:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002072D436E30>, estimator=LGBMRegressor(n_jobs=-1, random_state=3802), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2023-11-06 13:08:14,630:INFO:Initializing plot_model()
2023-11-06 13:08:14,630:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=LGBMRegressor(n_jobs=-1, random_state=3802), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002072D436E30>, system=True)
2023-11-06 13:08:14,630:INFO:Checking exceptions
2023-11-06 13:08:14,634:INFO:Preloading libraries
2023-11-06 13:08:14,644:INFO:Copying training dataset
2023-11-06 13:08:14,644:INFO:Plot type: pipeline
2023-11-06 13:08:14,981:INFO:Visual Rendered Successfully
2023-11-06 13:08:15,055:INFO:plot_model() successfully completed......................................
2023-11-06 13:08:19,334:INFO:Initializing plot_model()
2023-11-06 13:08:19,334:INFO:plot_model(plot=parameter, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=LGBMRegressor(n_jobs=-1, random_state=3802), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002072D436E30>, system=True)
2023-11-06 13:08:19,334:INFO:Checking exceptions
2023-11-06 13:08:19,338:INFO:Preloading libraries
2023-11-06 13:08:19,348:INFO:Copying training dataset
2023-11-06 13:08:19,348:INFO:Plot type: parameter
2023-11-06 13:08:19,353:INFO:Visual Rendered Successfully
2023-11-06 13:08:19,446:INFO:plot_model() successfully completed......................................
2023-11-06 13:08:21,032:INFO:Initializing plot_model()
2023-11-06 13:08:21,032:INFO:plot_model(plot=residuals, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=LGBMRegressor(n_jobs=-1, random_state=3802), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002072D436E30>, system=True)
2023-11-06 13:08:21,032:INFO:Checking exceptions
2023-11-06 13:08:21,036:INFO:Preloading libraries
2023-11-06 13:08:21,044:INFO:Copying training dataset
2023-11-06 13:08:21,044:INFO:Plot type: residuals
2023-11-06 13:08:21,463:INFO:Fitting Model
2023-11-06 13:08:21,554:INFO:Scoring test/hold-out set
2023-11-06 13:08:22,279:INFO:Visual Rendered Successfully
2023-11-06 13:08:22,370:INFO:plot_model() successfully completed......................................
2023-11-06 13:08:32,592:INFO:Initializing plot_model()
2023-11-06 13:08:32,592:INFO:plot_model(plot=learning, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=LGBMRegressor(n_jobs=-1, random_state=3802), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002072D436E30>, system=True)
2023-11-06 13:08:32,593:INFO:Checking exceptions
2023-11-06 13:08:32,597:INFO:Preloading libraries
2023-11-06 13:08:32,607:INFO:Copying training dataset
2023-11-06 13:08:32,607:INFO:Plot type: learning
2023-11-06 13:08:32,935:INFO:Fitting Model
2023-11-06 13:08:40,688:INFO:Visual Rendered Successfully
2023-11-06 13:08:40,759:INFO:plot_model() successfully completed......................................
2023-11-06 13:17:04,272:INFO:Initializing finalize_model()
2023-11-06 13:17:04,272:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002072D436E30>, estimator=LGBMRegressor(n_jobs=-1, random_state=3802), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-11-06 13:17:04,272:INFO:Finalizing LGBMRegressor(n_jobs=-1, random_state=3802)
2023-11-06 13:17:04,277:INFO:Initializing create_model()
2023-11-06 13:17:04,277:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002072D436E30>, estimator=LGBMRegressor(n_jobs=-1, random_state=3802), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-11-06 13:17:04,278:INFO:Checking exceptions
2023-11-06 13:17:04,280:INFO:Importing libraries
2023-11-06 13:17:04,280:INFO:Copying training dataset
2023-11-06 13:17:04,281:INFO:Defining folds
2023-11-06 13:17:04,281:INFO:Declaring metric variables
2023-11-06 13:17:04,281:INFO:Importing untrained model
2023-11-06 13:17:04,281:INFO:Declaring custom model
2023-11-06 13:17:04,282:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-06 13:17:04,284:INFO:Cross validation set to False
2023-11-06 13:17:04,284:INFO:Fitting Model
2023-11-06 13:17:04,418:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2023-11-06 13:17:04,419:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000104 seconds.
2023-11-06 13:17:04,419:INFO:You can set `force_row_wise=true` to remove the overhead.
2023-11-06 13:17:04,419:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2023-11-06 13:17:04,419:INFO:[LightGBM] [Info] Total Bins 298
2023-11-06 13:17:04,419:INFO:[LightGBM] [Info] Number of data points in the train set: 13134, number of used features: 20
2023-11-06 13:17:04,419:INFO:[LightGBM] [Info] Start training from score 106.666495
2023-11-06 13:17:04,495:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['accommodates', 'minimum_nights',
                                             'maximum_nights'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood_group',
                                             'property_type', 'room_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 T...rhood_group',
                                             'room_type'],
                                    transformer=OneHotEncoder(cols=['neighbourhood_group',
                                                                    'room_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['property_type'],
                                    transformer=TargetEncoder(cols=['property_type'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 LGBMRegressor(n_jobs=-1, random_state=3802))])
2023-11-06 13:17:04,495:INFO:create_model() successfully completed......................................
2023-11-06 13:17:04,570:INFO:_master_model_container: 21
2023-11-06 13:17:04,570:INFO:_display_container: 4
2023-11-06 13:17:04,583:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['accommodates', 'minimum_nights',
                                             'maximum_nights'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood_group',
                                             'property_type', 'room_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 T...rhood_group',
                                             'room_type'],
                                    transformer=OneHotEncoder(cols=['neighbourhood_group',
                                                                    'room_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['property_type'],
                                    transformer=TargetEncoder(cols=['property_type'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 LGBMRegressor(n_jobs=-1, random_state=3802))])
2023-11-06 13:17:04,584:INFO:finalize_model() successfully completed......................................
2023-11-06 13:17:21,221:INFO:Initializing save_model()
2023-11-06 13:17:21,221:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['accommodates', 'minimum_nights',
                                             'maximum_nights'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood_group',
                                             'property_type', 'room_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 T...rhood_group',
                                             'room_type'],
                                    transformer=OneHotEncoder(cols=['neighbourhood_group',
                                                                    'room_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['property_type'],
                                    transformer=TargetEncoder(cols=['property_type'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 LGBMRegressor(n_jobs=-1, random_state=3802))]), model_name=ml_airbnb, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\joseba\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['accommodates', 'minimum_nights',
                                             'maximum_nights'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood_group',
                                             'property_type', 'room_type'],
                                    transformer=SimpleImputer(strateg...ent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['neighbourhood_group',
                                             'room_type'],
                                    transformer=OneHotEncoder(cols=['neighbourhood_group',
                                                                    'room_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['property_type'],
                                    transformer=TargetEncoder(cols=['property_type'],
                                                              handle_missing='return_nan')))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2023-11-06 13:17:21,222:INFO:Adding model into prep_pipe
2023-11-06 13:17:21,222:WARNING:Only Model saved as it was a pipeline.
2023-11-06 13:17:21,239:INFO:ml_airbnb.pkl saved in current working directory
2023-11-06 13:17:21,252:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['accommodates', 'minimum_nights',
                                             'maximum_nights'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood_group',
                                             'property_type', 'room_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 T...rhood_group',
                                             'room_type'],
                                    transformer=OneHotEncoder(cols=['neighbourhood_group',
                                                                    'room_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['property_type'],
                                    transformer=TargetEncoder(cols=['property_type'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 LGBMRegressor(n_jobs=-1, random_state=3802))])
2023-11-06 13:17:21,253:INFO:save_model() successfully completed......................................
2023-11-06 15:00:00,954:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-06 15:00:00,954:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-06 15:00:00,954:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-06 15:00:00,954:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-06 15:00:01,447:INFO:PyCaret RegressionExperiment
2023-11-06 15:00:01,447:INFO:Logging name: reg-default-name
2023-11-06 15:00:01,447:INFO:ML Usecase: MLUsecase.REGRESSION
2023-11-06 15:00:01,447:INFO:version 3.1.0
2023-11-06 15:00:01,448:INFO:Initializing setup()
2023-11-06 15:00:01,448:INFO:self.USI: c5df
2023-11-06 15:00:01,448:INFO:self._variable_keys: {'X', 'fold_shuffle_param', 'USI', 'fold_groups_param', 'target_param', 'X_train', 'html_param', 'n_jobs_param', 'y_train', 'y', 'logging_param', 'exp_name_log', 'memory', 'idx', 'y_test', 'seed', 'transform_target_param', 'X_test', 'gpu_n_jobs_param', 'exp_id', '_available_plots', 'fold_generator', 'pipeline', '_ml_usecase', 'gpu_param', 'data', 'log_plots_param'}
2023-11-06 15:00:01,448:INFO:Checking environment
2023-11-06 15:00:01,448:INFO:python_version: 3.10.0
2023-11-06 15:00:01,448:INFO:python_build: ('tags/v3.10.0:b494f59', 'Oct  4 2021 19:00:18')
2023-11-06 15:00:01,448:INFO:machine: AMD64
2023-11-06 15:00:01,448:INFO:platform: Windows-10-10.0.19045-SP0
2023-11-06 15:00:01,452:INFO:Memory: svmem(total=17121947648, available=7341088768, percent=57.1, used=9780858880, free=7341088768)
2023-11-06 15:00:01,452:INFO:Physical Core: 4
2023-11-06 15:00:01,452:INFO:Logical Core: 4
2023-11-06 15:00:01,452:INFO:Checking libraries
2023-11-06 15:00:01,452:INFO:System:
2023-11-06 15:00:01,453:INFO:    python: 3.10.0 (tags/v3.10.0:b494f59, Oct  4 2021, 19:00:18) [MSC v.1929 64 bit (AMD64)]
2023-11-06 15:00:01,453:INFO:executable: c:\Users\joseba\AppData\Local\Programs\Python\Python310\python.exe
2023-11-06 15:00:01,453:INFO:   machine: Windows-10-10.0.19045-SP0
2023-11-06 15:00:01,453:INFO:PyCaret required dependencies:
2023-11-06 15:00:01,611:INFO:                 pip: 21.2.3
2023-11-06 15:00:01,611:INFO:          setuptools: 57.4.0
2023-11-06 15:00:01,611:INFO:             pycaret: 3.1.0
2023-11-06 15:00:01,612:INFO:             IPython: 8.17.2
2023-11-06 15:00:01,612:INFO:          ipywidgets: 8.1.1
2023-11-06 15:00:01,612:INFO:                tqdm: 4.66.1
2023-11-06 15:00:01,612:INFO:               numpy: 1.23.5
2023-11-06 15:00:01,612:INFO:              pandas: 1.5.3
2023-11-06 15:00:01,612:INFO:              jinja2: 3.1.2
2023-11-06 15:00:01,612:INFO:               scipy: 1.10.1
2023-11-06 15:00:01,612:INFO:              joblib: 1.3.2
2023-11-06 15:00:01,612:INFO:             sklearn: 1.2.2
2023-11-06 15:00:01,612:INFO:                pyod: 1.1.1
2023-11-06 15:00:01,612:INFO:            imblearn: 0.11.0
2023-11-06 15:00:01,612:INFO:   category_encoders: 2.6.3
2023-11-06 15:00:01,612:INFO:            lightgbm: 4.1.0
2023-11-06 15:00:01,612:INFO:               numba: 0.58.1
2023-11-06 15:00:01,613:INFO:            requests: 2.31.0
2023-11-06 15:00:01,613:INFO:          matplotlib: 3.8.1
2023-11-06 15:00:01,613:INFO:          scikitplot: 0.3.7
2023-11-06 15:00:01,613:INFO:         yellowbrick: 1.5
2023-11-06 15:00:01,613:INFO:              plotly: 5.18.0
2023-11-06 15:00:01,613:INFO:    plotly-resampler: Not installed
2023-11-06 15:00:01,613:INFO:             kaleido: 0.2.1
2023-11-06 15:00:01,613:INFO:           schemdraw: 0.15
2023-11-06 15:00:01,613:INFO:         statsmodels: 0.14.0
2023-11-06 15:00:01,613:INFO:              sktime: 0.21.1
2023-11-06 15:00:01,613:INFO:               tbats: 1.1.3
2023-11-06 15:00:01,613:INFO:            pmdarima: 2.0.4
2023-11-06 15:00:01,613:INFO:              psutil: 5.9.6
2023-11-06 15:00:01,613:INFO:          markupsafe: 2.1.3
2023-11-06 15:00:01,613:INFO:             pickle5: Not installed
2023-11-06 15:00:01,614:INFO:         cloudpickle: 3.0.0
2023-11-06 15:00:01,614:INFO:         deprecation: 2.1.0
2023-11-06 15:00:01,614:INFO:              xxhash: 3.4.1
2023-11-06 15:00:01,614:INFO:           wurlitzer: Not installed
2023-11-06 15:00:01,614:INFO:PyCaret optional dependencies:
2023-11-06 15:00:01,661:INFO:                shap: Not installed
2023-11-06 15:00:01,661:INFO:           interpret: Not installed
2023-11-06 15:00:01,661:INFO:                umap: Not installed
2023-11-06 15:00:01,661:INFO:     ydata_profiling: Not installed
2023-11-06 15:00:01,661:INFO:  explainerdashboard: Not installed
2023-11-06 15:00:01,661:INFO:             autoviz: Not installed
2023-11-06 15:00:01,661:INFO:           fairlearn: Not installed
2023-11-06 15:00:01,661:INFO:          deepchecks: Not installed
2023-11-06 15:00:01,661:INFO:             xgboost: Not installed
2023-11-06 15:00:01,662:INFO:            catboost: Not installed
2023-11-06 15:00:01,662:INFO:              kmodes: Not installed
2023-11-06 15:00:01,662:INFO:             mlxtend: Not installed
2023-11-06 15:00:01,662:INFO:       statsforecast: Not installed
2023-11-06 15:00:01,662:INFO:        tune_sklearn: Not installed
2023-11-06 15:00:01,662:INFO:                 ray: Not installed
2023-11-06 15:00:01,662:INFO:            hyperopt: Not installed
2023-11-06 15:00:01,662:INFO:              optuna: Not installed
2023-11-06 15:00:01,662:INFO:               skopt: Not installed
2023-11-06 15:00:01,662:INFO:              mlflow: Not installed
2023-11-06 15:00:01,663:INFO:              gradio: Not installed
2023-11-06 15:00:01,663:INFO:             fastapi: Not installed
2023-11-06 15:00:01,663:INFO:             uvicorn: Not installed
2023-11-06 15:00:01,663:INFO:              m2cgen: Not installed
2023-11-06 15:00:01,663:INFO:           evidently: Not installed
2023-11-06 15:00:01,663:INFO:               fugue: Not installed
2023-11-06 15:00:01,663:INFO:           streamlit: Not installed
2023-11-06 15:00:01,664:INFO:             prophet: Not installed
2023-11-06 15:00:01,664:INFO:None
2023-11-06 15:00:01,664:INFO:Set up data.
2023-11-06 15:00:01,715:INFO:Set up folding strategy.
2023-11-06 15:00:01,716:INFO:Set up train/test split.
2023-11-06 15:00:01,731:INFO:Set up index.
2023-11-06 15:00:01,762:INFO:Assigning column types.
2023-11-06 15:00:01,775:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-06 15:00:01,775:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-06 15:00:01,811:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-06 15:00:01,827:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-06 15:00:02,074:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-06 15:00:02,181:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-06 15:00:02,182:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 15:00:02,183:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 15:00:02,183:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-06 15:00:02,195:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-06 15:00:02,206:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-06 15:00:02,346:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-06 15:00:02,451:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-06 15:00:02,452:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 15:00:02,452:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 15:00:02,452:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-11-06 15:00:02,463:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-06 15:00:02,475:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-06 15:00:02,611:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-06 15:00:02,734:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-06 15:00:02,735:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 15:00:02,736:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 15:00:02,753:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-06 15:00:02,767:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-06 15:00:02,917:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-06 15:00:03,030:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-06 15:00:03,032:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 15:00:03,033:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 15:00:03,033:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-11-06 15:00:03,054:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-06 15:00:03,207:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-06 15:00:03,312:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-06 15:00:03,313:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 15:00:03,313:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 15:00:03,333:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-06 15:00:03,468:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-06 15:00:03,576:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-06 15:00:03,577:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 15:00:03,579:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 15:00:03,579:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-11-06 15:00:03,742:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-06 15:00:03,864:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-06 15:00:03,867:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 15:00:03,867:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 15:00:04,049:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-06 15:00:04,167:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-06 15:00:04,169:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 15:00:04,170:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 15:00:04,170:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-06 15:00:04,323:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-06 15:00:04,430:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 15:00:04,432:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 15:00:04,586:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-06 15:00:04,694:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 15:00:04,695:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 15:00:04,695:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-11-06 15:00:04,960:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 15:00:04,960:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 15:00:05,227:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 15:00:05,228:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 15:00:05,230:INFO:Preparing preprocessing pipeline...
2023-11-06 15:00:05,230:INFO:Set up simple imputation.
2023-11-06 15:00:05,236:INFO:Set up encoding of categorical features.
2023-11-06 15:00:05,421:INFO:Finished creating preprocessing pipeline.
2023-11-06 15:00:05,437:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\joseba\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['accommodates', 'minimum_nights',
                                             'maximum_nights'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood_group',
                                             'property_type', 'room_type'],
                                    transformer=SimpleImputer(strateg...ent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['neighbourhood_group',
                                             'room_type'],
                                    transformer=OneHotEncoder(cols=['neighbourhood_group',
                                                                    'room_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['property_type'],
                                    transformer=TargetEncoder(cols=['property_type'],
                                                              handle_missing='return_nan')))])
2023-11-06 15:00:05,437:INFO:Creating final display dataframe.
2023-11-06 15:00:05,874:INFO:Setup _display_container:                     Description             Value
0                    Session id              8206
1                        Target             price
2                   Target type        Regression
3           Original data shape        (13134, 7)
4        Transformed data shape       (13134, 21)
5   Transformed train set shape        (9193, 21)
6    Transformed test set shape        (3941, 21)
7              Numeric features                 3
8          Categorical features                 3
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              c5df
2023-11-06 15:00:06,156:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 15:00:06,156:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 15:00:06,419:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 15:00:06,420:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 15:00:06,421:INFO:setup() successfully completed in 4.98s...............
2023-11-06 15:00:06,447:INFO:Initializing compare_models()
2023-11-06 15:00:06,447:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000014CE4B27010>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000014CE4B27010>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-11-06 15:00:06,448:INFO:Checking exceptions
2023-11-06 15:00:06,451:INFO:Preparing display monitor
2023-11-06 15:00:06,486:INFO:Initializing Linear Regression
2023-11-06 15:00:06,487:INFO:Total runtime is 1.6669432322184246e-05 minutes
2023-11-06 15:00:06,491:INFO:SubProcess create_model() called ==================================
2023-11-06 15:00:06,492:INFO:Initializing create_model()
2023-11-06 15:00:06,492:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000014CE4B27010>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000014CE52C56F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 15:00:06,492:INFO:Checking exceptions
2023-11-06 15:00:06,492:INFO:Importing libraries
2023-11-06 15:00:06,493:INFO:Copying training dataset
2023-11-06 15:00:06,504:INFO:Defining folds
2023-11-06 15:00:06,504:INFO:Declaring metric variables
2023-11-06 15:00:06,511:INFO:Importing untrained model
2023-11-06 15:00:06,520:INFO:Linear Regression Imported successfully
2023-11-06 15:00:06,533:INFO:Starting cross validation
2023-11-06 15:00:06,542:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 15:00:11,822:INFO:Calculating mean and std
2023-11-06 15:00:11,824:INFO:Creating metrics dataframe
2023-11-06 15:00:11,829:INFO:Uploading results into container
2023-11-06 15:00:11,830:INFO:Uploading model into container now
2023-11-06 15:00:11,830:INFO:_master_model_container: 1
2023-11-06 15:00:11,830:INFO:_display_container: 2
2023-11-06 15:00:11,830:INFO:LinearRegression(n_jobs=-1)
2023-11-06 15:00:11,831:INFO:create_model() successfully completed......................................
2023-11-06 15:00:11,909:INFO:SubProcess create_model() end ==================================
2023-11-06 15:00:11,909:INFO:Creating metrics dataframe
2023-11-06 15:00:11,922:INFO:Initializing Lasso Regression
2023-11-06 15:00:11,922:INFO:Total runtime is 0.09059919516245525 minutes
2023-11-06 15:00:11,926:INFO:SubProcess create_model() called ==================================
2023-11-06 15:00:11,926:INFO:Initializing create_model()
2023-11-06 15:00:11,928:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000014CE4B27010>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000014CE52C56F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 15:00:11,928:INFO:Checking exceptions
2023-11-06 15:00:11,929:INFO:Importing libraries
2023-11-06 15:00:11,929:INFO:Copying training dataset
2023-11-06 15:00:11,937:INFO:Defining folds
2023-11-06 15:00:11,937:INFO:Declaring metric variables
2023-11-06 15:00:11,943:INFO:Importing untrained model
2023-11-06 15:00:11,949:INFO:Lasso Regression Imported successfully
2023-11-06 15:00:11,959:INFO:Starting cross validation
2023-11-06 15:00:11,961:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 15:00:12,871:INFO:Calculating mean and std
2023-11-06 15:00:12,873:INFO:Creating metrics dataframe
2023-11-06 15:00:12,878:INFO:Uploading results into container
2023-11-06 15:00:12,878:INFO:Uploading model into container now
2023-11-06 15:00:12,879:INFO:_master_model_container: 2
2023-11-06 15:00:12,880:INFO:_display_container: 2
2023-11-06 15:00:12,880:INFO:Lasso(random_state=8206)
2023-11-06 15:00:12,880:INFO:create_model() successfully completed......................................
2023-11-06 15:00:12,963:INFO:SubProcess create_model() end ==================================
2023-11-06 15:00:12,963:INFO:Creating metrics dataframe
2023-11-06 15:00:12,977:INFO:Initializing Ridge Regression
2023-11-06 15:00:12,977:INFO:Total runtime is 0.10818212429682414 minutes
2023-11-06 15:00:12,983:INFO:SubProcess create_model() called ==================================
2023-11-06 15:00:12,984:INFO:Initializing create_model()
2023-11-06 15:00:12,984:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000014CE4B27010>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000014CE52C56F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 15:00:12,984:INFO:Checking exceptions
2023-11-06 15:00:12,984:INFO:Importing libraries
2023-11-06 15:00:12,984:INFO:Copying training dataset
2023-11-06 15:00:12,993:INFO:Defining folds
2023-11-06 15:00:12,993:INFO:Declaring metric variables
2023-11-06 15:00:12,999:INFO:Importing untrained model
2023-11-06 15:00:13,005:INFO:Ridge Regression Imported successfully
2023-11-06 15:00:13,016:INFO:Starting cross validation
2023-11-06 15:00:13,018:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 15:00:13,732:INFO:Calculating mean and std
2023-11-06 15:00:13,734:INFO:Creating metrics dataframe
2023-11-06 15:00:13,738:INFO:Uploading results into container
2023-11-06 15:00:13,739:INFO:Uploading model into container now
2023-11-06 15:00:13,739:INFO:_master_model_container: 3
2023-11-06 15:00:13,739:INFO:_display_container: 2
2023-11-06 15:00:13,739:INFO:Ridge(random_state=8206)
2023-11-06 15:00:13,740:INFO:create_model() successfully completed......................................
2023-11-06 15:00:13,813:INFO:SubProcess create_model() end ==================================
2023-11-06 15:00:13,813:INFO:Creating metrics dataframe
2023-11-06 15:00:13,826:INFO:Initializing Elastic Net
2023-11-06 15:00:13,826:INFO:Total runtime is 0.12232711315155029 minutes
2023-11-06 15:00:13,829:INFO:SubProcess create_model() called ==================================
2023-11-06 15:00:13,830:INFO:Initializing create_model()
2023-11-06 15:00:13,830:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000014CE4B27010>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000014CE52C56F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 15:00:13,830:INFO:Checking exceptions
2023-11-06 15:00:13,830:INFO:Importing libraries
2023-11-06 15:00:13,830:INFO:Copying training dataset
2023-11-06 15:00:13,840:INFO:Defining folds
2023-11-06 15:00:13,840:INFO:Declaring metric variables
2023-11-06 15:00:13,845:INFO:Importing untrained model
2023-11-06 15:00:13,851:INFO:Elastic Net Imported successfully
2023-11-06 15:00:13,859:INFO:Starting cross validation
2023-11-06 15:00:13,861:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 15:00:14,829:INFO:Calculating mean and std
2023-11-06 15:00:14,830:INFO:Creating metrics dataframe
2023-11-06 15:00:14,838:INFO:Uploading results into container
2023-11-06 15:00:14,839:INFO:Uploading model into container now
2023-11-06 15:00:14,839:INFO:_master_model_container: 4
2023-11-06 15:00:14,839:INFO:_display_container: 2
2023-11-06 15:00:14,840:INFO:ElasticNet(random_state=8206)
2023-11-06 15:00:14,840:INFO:create_model() successfully completed......................................
2023-11-06 15:00:14,946:INFO:SubProcess create_model() end ==================================
2023-11-06 15:00:14,947:INFO:Creating metrics dataframe
2023-11-06 15:00:14,998:INFO:Initializing Least Angle Regression
2023-11-06 15:00:14,998:INFO:Total runtime is 0.14187009731928507 minutes
2023-11-06 15:00:15,004:INFO:SubProcess create_model() called ==================================
2023-11-06 15:00:15,004:INFO:Initializing create_model()
2023-11-06 15:00:15,004:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000014CE4B27010>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000014CE52C56F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 15:00:15,004:INFO:Checking exceptions
2023-11-06 15:00:15,004:INFO:Importing libraries
2023-11-06 15:00:15,005:INFO:Copying training dataset
2023-11-06 15:00:15,014:INFO:Defining folds
2023-11-06 15:00:15,014:INFO:Declaring metric variables
2023-11-06 15:00:15,019:INFO:Importing untrained model
2023-11-06 15:00:15,029:INFO:Least Angle Regression Imported successfully
2023-11-06 15:00:15,045:INFO:Starting cross validation
2023-11-06 15:00:15,047:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 15:00:15,835:INFO:Calculating mean and std
2023-11-06 15:00:15,837:INFO:Creating metrics dataframe
2023-11-06 15:00:15,843:INFO:Uploading results into container
2023-11-06 15:00:15,843:INFO:Uploading model into container now
2023-11-06 15:00:15,844:INFO:_master_model_container: 5
2023-11-06 15:00:15,844:INFO:_display_container: 2
2023-11-06 15:00:15,844:INFO:Lars(random_state=8206)
2023-11-06 15:00:15,844:INFO:create_model() successfully completed......................................
2023-11-06 15:00:15,917:INFO:SubProcess create_model() end ==================================
2023-11-06 15:00:15,917:INFO:Creating metrics dataframe
2023-11-06 15:00:15,930:INFO:Initializing Lasso Least Angle Regression
2023-11-06 15:00:15,931:INFO:Total runtime is 0.15740978717803955 minutes
2023-11-06 15:00:15,935:INFO:SubProcess create_model() called ==================================
2023-11-06 15:00:15,935:INFO:Initializing create_model()
2023-11-06 15:00:15,935:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000014CE4B27010>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000014CE52C56F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 15:00:15,935:INFO:Checking exceptions
2023-11-06 15:00:15,936:INFO:Importing libraries
2023-11-06 15:00:15,936:INFO:Copying training dataset
2023-11-06 15:00:15,943:INFO:Defining folds
2023-11-06 15:00:15,944:INFO:Declaring metric variables
2023-11-06 15:00:15,948:INFO:Importing untrained model
2023-11-06 15:00:15,954:INFO:Lasso Least Angle Regression Imported successfully
2023-11-06 15:00:15,963:INFO:Starting cross validation
2023-11-06 15:00:15,965:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 15:00:16,718:INFO:Calculating mean and std
2023-11-06 15:00:16,720:INFO:Creating metrics dataframe
2023-11-06 15:00:16,724:INFO:Uploading results into container
2023-11-06 15:00:16,725:INFO:Uploading model into container now
2023-11-06 15:00:16,725:INFO:_master_model_container: 6
2023-11-06 15:00:16,725:INFO:_display_container: 2
2023-11-06 15:00:16,726:INFO:LassoLars(random_state=8206)
2023-11-06 15:00:16,726:INFO:create_model() successfully completed......................................
2023-11-06 15:00:16,805:INFO:SubProcess create_model() end ==================================
2023-11-06 15:00:16,805:INFO:Creating metrics dataframe
2023-11-06 15:00:16,821:INFO:Initializing Orthogonal Matching Pursuit
2023-11-06 15:00:16,821:INFO:Total runtime is 0.17224198977152508 minutes
2023-11-06 15:00:16,828:INFO:SubProcess create_model() called ==================================
2023-11-06 15:00:16,829:INFO:Initializing create_model()
2023-11-06 15:00:16,829:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000014CE4B27010>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000014CE52C56F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 15:00:16,829:INFO:Checking exceptions
2023-11-06 15:00:16,829:INFO:Importing libraries
2023-11-06 15:00:16,830:INFO:Copying training dataset
2023-11-06 15:00:16,838:INFO:Defining folds
2023-11-06 15:00:16,838:INFO:Declaring metric variables
2023-11-06 15:00:16,844:INFO:Importing untrained model
2023-11-06 15:00:16,849:INFO:Orthogonal Matching Pursuit Imported successfully
2023-11-06 15:00:16,858:INFO:Starting cross validation
2023-11-06 15:00:16,860:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 15:00:17,688:INFO:Calculating mean and std
2023-11-06 15:00:17,691:INFO:Creating metrics dataframe
2023-11-06 15:00:17,696:INFO:Uploading results into container
2023-11-06 15:00:17,697:INFO:Uploading model into container now
2023-11-06 15:00:17,697:INFO:_master_model_container: 7
2023-11-06 15:00:17,697:INFO:_display_container: 2
2023-11-06 15:00:17,698:INFO:OrthogonalMatchingPursuit()
2023-11-06 15:00:17,698:INFO:create_model() successfully completed......................................
2023-11-06 15:00:17,771:INFO:SubProcess create_model() end ==================================
2023-11-06 15:00:17,771:INFO:Creating metrics dataframe
2023-11-06 15:00:17,785:INFO:Initializing Bayesian Ridge
2023-11-06 15:00:17,785:INFO:Total runtime is 0.1883139967918396 minutes
2023-11-06 15:00:17,789:INFO:SubProcess create_model() called ==================================
2023-11-06 15:00:17,790:INFO:Initializing create_model()
2023-11-06 15:00:17,790:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000014CE4B27010>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000014CE52C56F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 15:00:17,790:INFO:Checking exceptions
2023-11-06 15:00:17,790:INFO:Importing libraries
2023-11-06 15:00:17,790:INFO:Copying training dataset
2023-11-06 15:00:17,798:INFO:Defining folds
2023-11-06 15:00:17,798:INFO:Declaring metric variables
2023-11-06 15:00:17,804:INFO:Importing untrained model
2023-11-06 15:00:17,808:INFO:Bayesian Ridge Imported successfully
2023-11-06 15:00:17,817:INFO:Starting cross validation
2023-11-06 15:00:17,819:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 15:00:18,727:INFO:Calculating mean and std
2023-11-06 15:00:18,729:INFO:Creating metrics dataframe
2023-11-06 15:00:18,734:INFO:Uploading results into container
2023-11-06 15:00:18,735:INFO:Uploading model into container now
2023-11-06 15:00:18,736:INFO:_master_model_container: 8
2023-11-06 15:00:18,736:INFO:_display_container: 2
2023-11-06 15:00:18,736:INFO:BayesianRidge()
2023-11-06 15:00:18,736:INFO:create_model() successfully completed......................................
2023-11-06 15:00:18,818:INFO:SubProcess create_model() end ==================================
2023-11-06 15:00:18,818:INFO:Creating metrics dataframe
2023-11-06 15:00:18,834:INFO:Initializing Passive Aggressive Regressor
2023-11-06 15:00:18,834:INFO:Total runtime is 0.20580809513727824 minutes
2023-11-06 15:00:18,840:INFO:SubProcess create_model() called ==================================
2023-11-06 15:00:18,840:INFO:Initializing create_model()
2023-11-06 15:00:18,840:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000014CE4B27010>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000014CE52C56F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 15:00:18,841:INFO:Checking exceptions
2023-11-06 15:00:18,841:INFO:Importing libraries
2023-11-06 15:00:18,841:INFO:Copying training dataset
2023-11-06 15:00:18,852:INFO:Defining folds
2023-11-06 15:00:18,852:INFO:Declaring metric variables
2023-11-06 15:00:18,858:INFO:Importing untrained model
2023-11-06 15:00:18,870:INFO:Passive Aggressive Regressor Imported successfully
2023-11-06 15:00:18,881:INFO:Starting cross validation
2023-11-06 15:00:18,884:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 15:00:19,886:INFO:Calculating mean and std
2023-11-06 15:00:19,887:INFO:Creating metrics dataframe
2023-11-06 15:00:19,893:INFO:Uploading results into container
2023-11-06 15:00:19,894:INFO:Uploading model into container now
2023-11-06 15:00:19,895:INFO:_master_model_container: 9
2023-11-06 15:00:19,895:INFO:_display_container: 2
2023-11-06 15:00:19,896:INFO:PassiveAggressiveRegressor(random_state=8206)
2023-11-06 15:00:19,896:INFO:create_model() successfully completed......................................
2023-11-06 15:00:19,978:INFO:SubProcess create_model() end ==================================
2023-11-06 15:00:19,978:INFO:Creating metrics dataframe
2023-11-06 15:00:19,994:INFO:Initializing Huber Regressor
2023-11-06 15:00:19,994:INFO:Total runtime is 0.22513206402460734 minutes
2023-11-06 15:00:20,001:INFO:SubProcess create_model() called ==================================
2023-11-06 15:00:20,001:INFO:Initializing create_model()
2023-11-06 15:00:20,001:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000014CE4B27010>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000014CE52C56F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 15:00:20,002:INFO:Checking exceptions
2023-11-06 15:00:20,002:INFO:Importing libraries
2023-11-06 15:00:20,002:INFO:Copying training dataset
2023-11-06 15:00:20,013:INFO:Defining folds
2023-11-06 15:00:20,013:INFO:Declaring metric variables
2023-11-06 15:00:20,018:INFO:Importing untrained model
2023-11-06 15:00:20,025:INFO:Huber Regressor Imported successfully
2023-11-06 15:00:20,035:INFO:Starting cross validation
2023-11-06 15:00:20,037:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 15:00:20,761:WARNING:c:\Users\joseba\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-06 15:00:20,807:WARNING:c:\Users\joseba\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-06 15:00:21,313:WARNING:c:\Users\joseba\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-06 15:00:21,379:WARNING:c:\Users\joseba\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-06 15:00:21,391:WARNING:c:\Users\joseba\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-06 15:00:21,418:WARNING:c:\Users\joseba\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-06 15:00:21,930:WARNING:c:\Users\joseba\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-06 15:00:21,974:WARNING:c:\Users\joseba\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-06 15:00:22,084:INFO:Calculating mean and std
2023-11-06 15:00:22,087:INFO:Creating metrics dataframe
2023-11-06 15:00:22,092:INFO:Uploading results into container
2023-11-06 15:00:22,093:INFO:Uploading model into container now
2023-11-06 15:00:22,093:INFO:_master_model_container: 10
2023-11-06 15:00:22,093:INFO:_display_container: 2
2023-11-06 15:00:22,094:INFO:HuberRegressor()
2023-11-06 15:00:22,094:INFO:create_model() successfully completed......................................
2023-11-06 15:00:22,240:INFO:SubProcess create_model() end ==================================
2023-11-06 15:00:22,241:INFO:Creating metrics dataframe
2023-11-06 15:00:22,280:INFO:Initializing K Neighbors Regressor
2023-11-06 15:00:22,280:INFO:Total runtime is 0.2632389148076375 minutes
2023-11-06 15:00:22,285:INFO:SubProcess create_model() called ==================================
2023-11-06 15:00:22,285:INFO:Initializing create_model()
2023-11-06 15:00:22,285:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000014CE4B27010>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000014CE52C56F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 15:00:22,285:INFO:Checking exceptions
2023-11-06 15:00:22,285:INFO:Importing libraries
2023-11-06 15:00:22,286:INFO:Copying training dataset
2023-11-06 15:00:22,295:INFO:Defining folds
2023-11-06 15:00:22,295:INFO:Declaring metric variables
2023-11-06 15:00:22,299:INFO:Importing untrained model
2023-11-06 15:00:22,304:INFO:K Neighbors Regressor Imported successfully
2023-11-06 15:00:22,314:INFO:Starting cross validation
2023-11-06 15:00:22,315:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 15:00:23,335:INFO:Calculating mean and std
2023-11-06 15:00:23,337:INFO:Creating metrics dataframe
2023-11-06 15:00:23,342:INFO:Uploading results into container
2023-11-06 15:00:23,343:INFO:Uploading model into container now
2023-11-06 15:00:23,343:INFO:_master_model_container: 11
2023-11-06 15:00:23,343:INFO:_display_container: 2
2023-11-06 15:00:23,344:INFO:KNeighborsRegressor(n_jobs=-1)
2023-11-06 15:00:23,344:INFO:create_model() successfully completed......................................
2023-11-06 15:00:23,424:INFO:SubProcess create_model() end ==================================
2023-11-06 15:00:23,424:INFO:Creating metrics dataframe
2023-11-06 15:00:23,442:INFO:Initializing Decision Tree Regressor
2023-11-06 15:00:23,442:INFO:Total runtime is 0.2825921773910522 minutes
2023-11-06 15:00:23,446:INFO:SubProcess create_model() called ==================================
2023-11-06 15:00:23,447:INFO:Initializing create_model()
2023-11-06 15:00:23,447:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000014CE4B27010>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000014CE52C56F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 15:00:23,447:INFO:Checking exceptions
2023-11-06 15:00:23,447:INFO:Importing libraries
2023-11-06 15:00:23,447:INFO:Copying training dataset
2023-11-06 15:00:23,458:INFO:Defining folds
2023-11-06 15:00:23,458:INFO:Declaring metric variables
2023-11-06 15:00:23,462:INFO:Importing untrained model
2023-11-06 15:00:23,469:INFO:Decision Tree Regressor Imported successfully
2023-11-06 15:00:23,476:INFO:Starting cross validation
2023-11-06 15:00:23,480:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 15:00:24,234:INFO:Calculating mean and std
2023-11-06 15:00:24,236:INFO:Creating metrics dataframe
2023-11-06 15:00:24,241:INFO:Uploading results into container
2023-11-06 15:00:24,242:INFO:Uploading model into container now
2023-11-06 15:00:24,242:INFO:_master_model_container: 12
2023-11-06 15:00:24,242:INFO:_display_container: 2
2023-11-06 15:00:24,243:INFO:DecisionTreeRegressor(random_state=8206)
2023-11-06 15:00:24,243:INFO:create_model() successfully completed......................................
2023-11-06 15:00:24,316:INFO:SubProcess create_model() end ==================================
2023-11-06 15:00:24,316:INFO:Creating metrics dataframe
2023-11-06 15:00:24,334:INFO:Initializing Random Forest Regressor
2023-11-06 15:00:24,334:INFO:Total runtime is 0.2974647641181945 minutes
2023-11-06 15:00:24,338:INFO:SubProcess create_model() called ==================================
2023-11-06 15:00:24,338:INFO:Initializing create_model()
2023-11-06 15:00:24,338:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000014CE4B27010>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000014CE52C56F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 15:00:24,339:INFO:Checking exceptions
2023-11-06 15:00:24,339:INFO:Importing libraries
2023-11-06 15:00:24,339:INFO:Copying training dataset
2023-11-06 15:00:24,348:INFO:Defining folds
2023-11-06 15:00:24,348:INFO:Declaring metric variables
2023-11-06 15:00:24,353:INFO:Importing untrained model
2023-11-06 15:00:24,358:INFO:Random Forest Regressor Imported successfully
2023-11-06 15:00:24,367:INFO:Starting cross validation
2023-11-06 15:00:24,369:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 15:00:32,404:INFO:Calculating mean and std
2023-11-06 15:00:32,406:INFO:Creating metrics dataframe
2023-11-06 15:00:32,410:INFO:Uploading results into container
2023-11-06 15:00:32,411:INFO:Uploading model into container now
2023-11-06 15:00:32,412:INFO:_master_model_container: 13
2023-11-06 15:00:32,412:INFO:_display_container: 2
2023-11-06 15:00:32,412:INFO:RandomForestRegressor(n_jobs=-1, random_state=8206)
2023-11-06 15:00:32,412:INFO:create_model() successfully completed......................................
2023-11-06 15:00:32,486:INFO:SubProcess create_model() end ==================================
2023-11-06 15:00:32,487:INFO:Creating metrics dataframe
2023-11-06 15:00:32,503:INFO:Initializing Extra Trees Regressor
2023-11-06 15:00:32,504:INFO:Total runtime is 0.4336272239685058 minutes
2023-11-06 15:00:32,508:INFO:SubProcess create_model() called ==================================
2023-11-06 15:00:32,509:INFO:Initializing create_model()
2023-11-06 15:00:32,509:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000014CE4B27010>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000014CE52C56F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 15:00:32,509:INFO:Checking exceptions
2023-11-06 15:00:32,510:INFO:Importing libraries
2023-11-06 15:00:32,510:INFO:Copying training dataset
2023-11-06 15:00:32,518:INFO:Defining folds
2023-11-06 15:00:32,518:INFO:Declaring metric variables
2023-11-06 15:00:32,524:INFO:Importing untrained model
2023-11-06 15:00:32,529:INFO:Extra Trees Regressor Imported successfully
2023-11-06 15:00:32,538:INFO:Starting cross validation
2023-11-06 15:00:32,540:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 15:00:39,578:INFO:Calculating mean and std
2023-11-06 15:00:39,580:INFO:Creating metrics dataframe
2023-11-06 15:00:39,584:INFO:Uploading results into container
2023-11-06 15:00:39,585:INFO:Uploading model into container now
2023-11-06 15:00:39,585:INFO:_master_model_container: 14
2023-11-06 15:00:39,585:INFO:_display_container: 2
2023-11-06 15:00:39,586:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=8206)
2023-11-06 15:00:39,586:INFO:create_model() successfully completed......................................
2023-11-06 15:00:39,662:INFO:SubProcess create_model() end ==================================
2023-11-06 15:00:39,662:INFO:Creating metrics dataframe
2023-11-06 15:00:39,678:INFO:Initializing AdaBoost Regressor
2023-11-06 15:00:39,678:INFO:Total runtime is 0.5531946897506713 minutes
2023-11-06 15:00:39,682:INFO:SubProcess create_model() called ==================================
2023-11-06 15:00:39,682:INFO:Initializing create_model()
2023-11-06 15:00:39,683:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000014CE4B27010>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000014CE52C56F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 15:00:39,683:INFO:Checking exceptions
2023-11-06 15:00:39,683:INFO:Importing libraries
2023-11-06 15:00:39,683:INFO:Copying training dataset
2023-11-06 15:00:39,692:INFO:Defining folds
2023-11-06 15:00:39,692:INFO:Declaring metric variables
2023-11-06 15:00:39,697:INFO:Importing untrained model
2023-11-06 15:00:39,710:INFO:AdaBoost Regressor Imported successfully
2023-11-06 15:00:39,726:INFO:Starting cross validation
2023-11-06 15:00:39,728:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 15:00:41,079:INFO:Calculating mean and std
2023-11-06 15:00:41,081:INFO:Creating metrics dataframe
2023-11-06 15:00:41,085:INFO:Uploading results into container
2023-11-06 15:00:41,087:INFO:Uploading model into container now
2023-11-06 15:00:41,087:INFO:_master_model_container: 15
2023-11-06 15:00:41,087:INFO:_display_container: 2
2023-11-06 15:00:41,088:INFO:AdaBoostRegressor(random_state=8206)
2023-11-06 15:00:41,088:INFO:create_model() successfully completed......................................
2023-11-06 15:00:41,160:INFO:SubProcess create_model() end ==================================
2023-11-06 15:00:41,161:INFO:Creating metrics dataframe
2023-11-06 15:00:41,180:INFO:Initializing Gradient Boosting Regressor
2023-11-06 15:00:41,180:INFO:Total runtime is 0.5782264550526937 minutes
2023-11-06 15:00:41,185:INFO:SubProcess create_model() called ==================================
2023-11-06 15:00:41,185:INFO:Initializing create_model()
2023-11-06 15:00:41,185:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000014CE4B27010>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000014CE52C56F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 15:00:41,186:INFO:Checking exceptions
2023-11-06 15:00:41,186:INFO:Importing libraries
2023-11-06 15:00:41,186:INFO:Copying training dataset
2023-11-06 15:00:41,194:INFO:Defining folds
2023-11-06 15:00:41,195:INFO:Declaring metric variables
2023-11-06 15:00:41,200:INFO:Importing untrained model
2023-11-06 15:00:41,204:INFO:Gradient Boosting Regressor Imported successfully
2023-11-06 15:00:41,213:INFO:Starting cross validation
2023-11-06 15:00:41,215:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 15:00:43,572:INFO:Calculating mean and std
2023-11-06 15:00:43,574:INFO:Creating metrics dataframe
2023-11-06 15:00:43,578:INFO:Uploading results into container
2023-11-06 15:00:43,578:INFO:Uploading model into container now
2023-11-06 15:00:43,579:INFO:_master_model_container: 16
2023-11-06 15:00:43,579:INFO:_display_container: 2
2023-11-06 15:00:43,580:INFO:GradientBoostingRegressor(random_state=8206)
2023-11-06 15:00:43,580:INFO:create_model() successfully completed......................................
2023-11-06 15:00:43,652:INFO:SubProcess create_model() end ==================================
2023-11-06 15:00:43,652:INFO:Creating metrics dataframe
2023-11-06 15:00:43,667:INFO:Initializing Light Gradient Boosting Machine
2023-11-06 15:00:43,668:INFO:Total runtime is 0.6196972290674845 minutes
2023-11-06 15:00:43,672:INFO:SubProcess create_model() called ==================================
2023-11-06 15:00:43,673:INFO:Initializing create_model()
2023-11-06 15:00:43,673:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000014CE4B27010>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000014CE52C56F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 15:00:43,673:INFO:Checking exceptions
2023-11-06 15:00:43,673:INFO:Importing libraries
2023-11-06 15:00:43,673:INFO:Copying training dataset
2023-11-06 15:00:43,681:INFO:Defining folds
2023-11-06 15:00:43,682:INFO:Declaring metric variables
2023-11-06 15:00:43,688:INFO:Importing untrained model
2023-11-06 15:00:43,693:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-06 15:00:43,702:INFO:Starting cross validation
2023-11-06 15:00:43,704:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 15:00:45,020:INFO:Calculating mean and std
2023-11-06 15:00:45,022:INFO:Creating metrics dataframe
2023-11-06 15:00:45,026:INFO:Uploading results into container
2023-11-06 15:00:45,027:INFO:Uploading model into container now
2023-11-06 15:00:45,027:INFO:_master_model_container: 17
2023-11-06 15:00:45,027:INFO:_display_container: 2
2023-11-06 15:00:45,028:INFO:LGBMRegressor(n_jobs=-1, random_state=8206)
2023-11-06 15:00:45,028:INFO:create_model() successfully completed......................................
2023-11-06 15:00:45,109:INFO:SubProcess create_model() end ==================================
2023-11-06 15:00:45,109:INFO:Creating metrics dataframe
2023-11-06 15:00:45,127:INFO:Initializing Dummy Regressor
2023-11-06 15:00:45,127:INFO:Total runtime is 0.6440155426661173 minutes
2023-11-06 15:00:45,133:INFO:SubProcess create_model() called ==================================
2023-11-06 15:00:45,133:INFO:Initializing create_model()
2023-11-06 15:00:45,133:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000014CE4B27010>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000014CE52C56F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 15:00:45,133:INFO:Checking exceptions
2023-11-06 15:00:45,133:INFO:Importing libraries
2023-11-06 15:00:45,134:INFO:Copying training dataset
2023-11-06 15:00:45,142:INFO:Defining folds
2023-11-06 15:00:45,142:INFO:Declaring metric variables
2023-11-06 15:00:45,148:INFO:Importing untrained model
2023-11-06 15:00:45,153:INFO:Dummy Regressor Imported successfully
2023-11-06 15:00:45,165:INFO:Starting cross validation
2023-11-06 15:00:45,169:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 15:00:46,018:INFO:Calculating mean and std
2023-11-06 15:00:46,020:INFO:Creating metrics dataframe
2023-11-06 15:00:46,025:INFO:Uploading results into container
2023-11-06 15:00:46,026:INFO:Uploading model into container now
2023-11-06 15:00:46,026:INFO:_master_model_container: 18
2023-11-06 15:00:46,027:INFO:_display_container: 2
2023-11-06 15:00:46,027:INFO:DummyRegressor()
2023-11-06 15:00:46,027:INFO:create_model() successfully completed......................................
2023-11-06 15:00:46,096:INFO:SubProcess create_model() end ==================================
2023-11-06 15:00:46,096:INFO:Creating metrics dataframe
2023-11-06 15:00:46,127:INFO:Initializing create_model()
2023-11-06 15:00:46,127:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000014CE4B27010>, estimator=LGBMRegressor(n_jobs=-1, random_state=8206), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-06 15:00:46,127:INFO:Checking exceptions
2023-11-06 15:00:46,131:INFO:Importing libraries
2023-11-06 15:00:46,131:INFO:Copying training dataset
2023-11-06 15:00:46,137:INFO:Defining folds
2023-11-06 15:00:46,137:INFO:Declaring metric variables
2023-11-06 15:00:46,137:INFO:Importing untrained model
2023-11-06 15:00:46,138:INFO:Declaring custom model
2023-11-06 15:00:46,138:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-06 15:00:46,140:INFO:Cross validation set to False
2023-11-06 15:00:46,140:INFO:Fitting Model
2023-11-06 15:00:46,296:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2023-11-06 15:00:46,297:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000085 seconds.
2023-11-06 15:00:46,297:INFO:You can set `force_row_wise=true` to remove the overhead.
2023-11-06 15:00:46,297:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2023-11-06 15:00:46,297:INFO:[LightGBM] [Info] Total Bins 277
2023-11-06 15:00:46,297:INFO:[LightGBM] [Info] Number of data points in the train set: 9193, number of used features: 20
2023-11-06 15:00:46,298:INFO:[LightGBM] [Info] Start training from score 106.028024
2023-11-06 15:00:46,366:INFO:LGBMRegressor(n_jobs=-1, random_state=8206)
2023-11-06 15:00:46,366:INFO:create_model() successfully completed......................................
2023-11-06 15:00:46,496:INFO:_master_model_container: 18
2023-11-06 15:00:46,497:INFO:_display_container: 2
2023-11-06 15:00:46,497:INFO:LGBMRegressor(n_jobs=-1, random_state=8206)
2023-11-06 15:00:46,497:INFO:compare_models() successfully completed......................................
2023-11-06 15:00:46,566:INFO:Initializing create_model()
2023-11-06 15:00:46,566:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000014CE4B27010>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-06 15:00:46,566:INFO:Checking exceptions
2023-11-06 15:00:46,584:INFO:Importing libraries
2023-11-06 15:00:46,585:INFO:Copying training dataset
2023-11-06 15:00:46,593:INFO:Defining folds
2023-11-06 15:00:46,593:INFO:Declaring metric variables
2023-11-06 15:00:46,598:INFO:Importing untrained model
2023-11-06 15:00:46,603:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-06 15:00:46,620:INFO:Starting cross validation
2023-11-06 15:00:46,623:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 15:00:48,107:INFO:Calculating mean and std
2023-11-06 15:00:48,109:INFO:Creating metrics dataframe
2023-11-06 15:00:48,116:INFO:Finalizing model
2023-11-06 15:00:48,231:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2023-11-06 15:00:48,233:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000333 seconds.
2023-11-06 15:00:48,233:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-11-06 15:00:48,233:INFO:[LightGBM] [Info] Total Bins 277
2023-11-06 15:00:48,233:INFO:[LightGBM] [Info] Number of data points in the train set: 9193, number of used features: 20
2023-11-06 15:00:48,233:INFO:[LightGBM] [Info] Start training from score 106.028024
2023-11-06 15:00:48,300:INFO:Uploading results into container
2023-11-06 15:00:48,301:INFO:Uploading model into container now
2023-11-06 15:00:48,312:INFO:_master_model_container: 19
2023-11-06 15:00:48,312:INFO:_display_container: 3
2023-11-06 15:00:48,313:INFO:LGBMRegressor(n_jobs=-1, random_state=8206)
2023-11-06 15:00:48,313:INFO:create_model() successfully completed......................................
2023-11-06 15:00:48,406:INFO:Initializing tune_model()
2023-11-06 15:00:48,407:INFO:tune_model(estimator=LGBMRegressor(n_jobs=-1, random_state=8206), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000014CE4B27010>)
2023-11-06 15:00:48,407:INFO:Checking exceptions
2023-11-06 15:00:48,438:INFO:Copying training dataset
2023-11-06 15:00:48,446:INFO:Checking base model
2023-11-06 15:00:48,446:INFO:Base model : Light Gradient Boosting Machine
2023-11-06 15:00:48,452:INFO:Declaring metric variables
2023-11-06 15:00:48,460:INFO:Defining Hyperparameters
2023-11-06 15:00:48,571:INFO:Tuning with n_jobs=-1
2023-11-06 15:00:48,572:INFO:Initializing RandomizedSearchCV
2023-11-06 15:01:06,848:INFO:best_params: {'actual_estimator__reg_lambda': 1, 'actual_estimator__reg_alpha': 0.005, 'actual_estimator__num_leaves': 90, 'actual_estimator__n_estimators': 250, 'actual_estimator__min_split_gain': 0.9, 'actual_estimator__min_child_samples': 1, 'actual_estimator__learning_rate': 0.1, 'actual_estimator__feature_fraction': 0.8, 'actual_estimator__bagging_freq': 6, 'actual_estimator__bagging_fraction': 1.0}
2023-11-06 15:01:06,850:INFO:Hyperparameter search completed
2023-11-06 15:01:06,850:INFO:SubProcess create_model() called ==================================
2023-11-06 15:01:06,850:INFO:Initializing create_model()
2023-11-06 15:01:06,851:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000014CE4B27010>, estimator=LGBMRegressor(n_jobs=-1, random_state=8206), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000014CE5136E30>, model_only=True, return_train_score=False, kwargs={'reg_lambda': 1, 'reg_alpha': 0.005, 'num_leaves': 90, 'n_estimators': 250, 'min_split_gain': 0.9, 'min_child_samples': 1, 'learning_rate': 0.1, 'feature_fraction': 0.8, 'bagging_freq': 6, 'bagging_fraction': 1.0})
2023-11-06 15:01:06,851:INFO:Checking exceptions
2023-11-06 15:01:06,851:INFO:Importing libraries
2023-11-06 15:01:06,851:INFO:Copying training dataset
2023-11-06 15:01:06,861:INFO:Defining folds
2023-11-06 15:01:06,862:INFO:Declaring metric variables
2023-11-06 15:01:06,865:INFO:Importing untrained model
2023-11-06 15:01:06,865:INFO:Declaring custom model
2023-11-06 15:01:06,871:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-06 15:01:06,880:INFO:Starting cross validation
2023-11-06 15:01:06,882:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 15:01:11,990:INFO:Calculating mean and std
2023-11-06 15:01:11,992:INFO:Creating metrics dataframe
2023-11-06 15:01:11,999:INFO:Finalizing model
2023-11-06 15:01:12,115:INFO:[LightGBM] [Warning] feature_fraction is set=0.8, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.8
2023-11-06 15:01:12,115:INFO:[LightGBM] [Warning] bagging_fraction is set=1.0, subsample=1.0 will be ignored. Current value: bagging_fraction=1.0
2023-11-06 15:01:12,115:INFO:[LightGBM] [Warning] bagging_freq is set=6, subsample_freq=0 will be ignored. Current value: bagging_freq=6
2023-11-06 15:01:12,120:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2023-11-06 15:01:12,121:INFO:[LightGBM] [Warning] feature_fraction is set=0.8, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.8
2023-11-06 15:01:12,121:INFO:[LightGBM] [Warning] bagging_fraction is set=1.0, subsample=1.0 will be ignored. Current value: bagging_fraction=1.0
2023-11-06 15:01:12,121:INFO:[LightGBM] [Warning] bagging_freq is set=6, subsample_freq=0 will be ignored. Current value: bagging_freq=6
2023-11-06 15:01:12,121:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000070 seconds.
2023-11-06 15:01:12,121:INFO:You can set `force_row_wise=true` to remove the overhead.
2023-11-06 15:01:12,121:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2023-11-06 15:01:12,121:INFO:[LightGBM] [Info] Total Bins 277
2023-11-06 15:01:12,122:INFO:[LightGBM] [Info] Number of data points in the train set: 9193, number of used features: 20
2023-11-06 15:01:12,122:INFO:[LightGBM] [Info] Start training from score 106.028024
2023-11-06 15:01:12,502:INFO:Uploading results into container
2023-11-06 15:01:12,504:INFO:Uploading model into container now
2023-11-06 15:01:12,504:INFO:_master_model_container: 20
2023-11-06 15:01:12,504:INFO:_display_container: 4
2023-11-06 15:01:12,505:INFO:LGBMRegressor(bagging_fraction=1.0, bagging_freq=6, feature_fraction=0.8,
              min_child_samples=1, min_split_gain=0.9, n_estimators=250,
              n_jobs=-1, num_leaves=90, random_state=8206, reg_alpha=0.005,
              reg_lambda=1)
2023-11-06 15:01:12,505:INFO:create_model() successfully completed......................................
2023-11-06 15:01:12,584:INFO:SubProcess create_model() end ==================================
2023-11-06 15:01:12,584:INFO:choose_better activated
2023-11-06 15:01:12,588:INFO:SubProcess create_model() called ==================================
2023-11-06 15:01:12,589:INFO:Initializing create_model()
2023-11-06 15:01:12,589:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000014CE4B27010>, estimator=LGBMRegressor(n_jobs=-1, random_state=8206), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-06 15:01:12,589:INFO:Checking exceptions
2023-11-06 15:01:12,592:INFO:Importing libraries
2023-11-06 15:01:12,592:INFO:Copying training dataset
2023-11-06 15:01:12,599:INFO:Defining folds
2023-11-06 15:01:12,599:INFO:Declaring metric variables
2023-11-06 15:01:12,600:INFO:Importing untrained model
2023-11-06 15:01:12,600:INFO:Declaring custom model
2023-11-06 15:01:12,601:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-06 15:01:12,601:INFO:Starting cross validation
2023-11-06 15:01:12,602:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 15:01:13,928:INFO:Calculating mean and std
2023-11-06 15:01:13,928:INFO:Creating metrics dataframe
2023-11-06 15:01:13,931:INFO:Finalizing model
2023-11-06 15:01:14,048:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2023-11-06 15:01:14,049:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000306 seconds.
2023-11-06 15:01:14,049:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-11-06 15:01:14,049:INFO:[LightGBM] [Info] Total Bins 277
2023-11-06 15:01:14,049:INFO:[LightGBM] [Info] Number of data points in the train set: 9193, number of used features: 20
2023-11-06 15:01:14,049:INFO:[LightGBM] [Info] Start training from score 106.028024
2023-11-06 15:01:14,137:INFO:Uploading results into container
2023-11-06 15:01:14,138:INFO:Uploading model into container now
2023-11-06 15:01:14,138:INFO:_master_model_container: 21
2023-11-06 15:01:14,138:INFO:_display_container: 5
2023-11-06 15:01:14,139:INFO:LGBMRegressor(n_jobs=-1, random_state=8206)
2023-11-06 15:01:14,139:INFO:create_model() successfully completed......................................
2023-11-06 15:01:14,213:INFO:SubProcess create_model() end ==================================
2023-11-06 15:01:14,214:INFO:LGBMRegressor(n_jobs=-1, random_state=8206) result for R2 is 0.6297
2023-11-06 15:01:14,215:INFO:LGBMRegressor(bagging_fraction=1.0, bagging_freq=6, feature_fraction=0.8,
              min_child_samples=1, min_split_gain=0.9, n_estimators=250,
              n_jobs=-1, num_leaves=90, random_state=8206, reg_alpha=0.005,
              reg_lambda=1) result for R2 is 0.6125
2023-11-06 15:01:14,215:INFO:LGBMRegressor(n_jobs=-1, random_state=8206) is best model
2023-11-06 15:01:14,215:INFO:choose_better completed
2023-11-06 15:01:14,215:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-11-06 15:01:14,228:INFO:_master_model_container: 21
2023-11-06 15:01:14,228:INFO:_display_container: 4
2023-11-06 15:01:14,229:INFO:LGBMRegressor(n_jobs=-1, random_state=8206)
2023-11-06 15:01:14,229:INFO:tune_model() successfully completed......................................
2023-11-06 15:01:14,341:INFO:Initializing evaluate_model()
2023-11-06 15:01:14,341:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000014CE4B27010>, estimator=LGBMRegressor(n_jobs=-1, random_state=8206), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2023-11-06 15:01:14,358:INFO:Initializing plot_model()
2023-11-06 15:01:14,358:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=LGBMRegressor(n_jobs=-1, random_state=8206), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000014CE4B27010>, system=True)
2023-11-06 15:01:14,358:INFO:Checking exceptions
2023-11-06 15:01:14,361:INFO:Preloading libraries
2023-11-06 15:01:14,369:INFO:Copying training dataset
2023-11-06 15:01:14,370:INFO:Plot type: pipeline
2023-11-06 15:01:14,636:INFO:Visual Rendered Successfully
2023-11-06 15:01:14,714:INFO:plot_model() successfully completed......................................
2023-11-06 15:01:14,786:INFO:Initializing finalize_model()
2023-11-06 15:01:14,786:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000014CE4B27010>, estimator=LGBMRegressor(n_jobs=-1, random_state=8206), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-11-06 15:01:14,786:INFO:Finalizing LGBMRegressor(n_jobs=-1, random_state=8206)
2023-11-06 15:01:14,790:INFO:Initializing create_model()
2023-11-06 15:01:14,790:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000014CE4B27010>, estimator=LGBMRegressor(n_jobs=-1, random_state=8206), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-11-06 15:01:14,790:INFO:Checking exceptions
2023-11-06 15:01:14,793:INFO:Importing libraries
2023-11-06 15:01:14,793:INFO:Copying training dataset
2023-11-06 15:01:14,794:INFO:Defining folds
2023-11-06 15:01:14,794:INFO:Declaring metric variables
2023-11-06 15:01:14,794:INFO:Importing untrained model
2023-11-06 15:01:14,794:INFO:Declaring custom model
2023-11-06 15:01:14,795:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-06 15:01:14,796:INFO:Cross validation set to False
2023-11-06 15:01:14,797:INFO:Fitting Model
2023-11-06 15:01:15,054:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2023-11-06 15:01:15,055:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000520 seconds.
2023-11-06 15:01:15,055:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-11-06 15:01:15,056:INFO:[LightGBM] [Info] Total Bins 298
2023-11-06 15:01:15,056:INFO:[LightGBM] [Info] Number of data points in the train set: 13134, number of used features: 20
2023-11-06 15:01:15,056:INFO:[LightGBM] [Info] Start training from score 106.666495
2023-11-06 15:01:15,174:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['accommodates', 'minimum_nights',
                                             'maximum_nights'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood_group',
                                             'property_type', 'room_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 T...rhood_group',
                                             'room_type'],
                                    transformer=OneHotEncoder(cols=['neighbourhood_group',
                                                                    'room_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['property_type'],
                                    transformer=TargetEncoder(cols=['property_type'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 LGBMRegressor(n_jobs=-1, random_state=8206))])
2023-11-06 15:01:15,174:INFO:create_model() successfully completed......................................
2023-11-06 15:01:15,247:INFO:_master_model_container: 21
2023-11-06 15:01:15,248:INFO:_display_container: 4
2023-11-06 15:01:15,261:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['accommodates', 'minimum_nights',
                                             'maximum_nights'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood_group',
                                             'property_type', 'room_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 T...rhood_group',
                                             'room_type'],
                                    transformer=OneHotEncoder(cols=['neighbourhood_group',
                                                                    'room_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['property_type'],
                                    transformer=TargetEncoder(cols=['property_type'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 LGBMRegressor(n_jobs=-1, random_state=8206))])
2023-11-06 15:01:15,261:INFO:finalize_model() successfully completed......................................
2023-11-06 15:04:21,129:INFO:Initializing plot_model()
2023-11-06 15:04:21,129:INFO:plot_model(plot=learning, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=LGBMRegressor(n_jobs=-1, random_state=8206), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000014CE4B27010>, system=True)
2023-11-06 15:04:21,129:INFO:Checking exceptions
2023-11-06 15:04:21,134:INFO:Preloading libraries
2023-11-06 15:04:21,146:INFO:Copying training dataset
2023-11-06 15:04:21,146:INFO:Plot type: learning
2023-11-06 15:04:21,502:INFO:Fitting Model
2023-11-06 15:04:29,881:INFO:Visual Rendered Successfully
2023-11-06 15:04:29,954:INFO:plot_model() successfully completed......................................
2023-11-06 15:04:48,950:INFO:Initializing plot_model()
2023-11-06 15:04:48,950:INFO:plot_model(plot=vc, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=LGBMRegressor(n_jobs=-1, random_state=8206), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000014CE4B27010>, system=True)
2023-11-06 15:04:48,950:INFO:Checking exceptions
2023-11-06 15:04:48,954:INFO:Preloading libraries
2023-11-06 15:04:48,966:INFO:Copying training dataset
2023-11-06 15:04:48,966:INFO:Plot type: vc
2023-11-06 15:04:48,966:INFO:Determining param_name
2023-11-06 15:04:48,966:INFO:param_name: max_depth
2023-11-06 15:04:49,312:INFO:Fitting Model
2023-11-06 15:04:57,639:INFO:Visual Rendered Successfully
2023-11-06 15:04:57,733:INFO:plot_model() successfully completed......................................
2023-11-06 15:05:02,141:INFO:Initializing plot_model()
2023-11-06 15:05:02,141:INFO:plot_model(plot=learning, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=LGBMRegressor(n_jobs=-1, random_state=8206), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000014CE4B27010>, system=True)
2023-11-06 15:05:02,141:INFO:Checking exceptions
2023-11-06 15:05:02,145:INFO:Preloading libraries
2023-11-06 15:05:02,160:INFO:Copying training dataset
2023-11-06 15:05:02,160:INFO:Plot type: learning
2023-11-06 15:05:02,508:INFO:Fitting Model
2023-11-06 15:05:10,601:INFO:Visual Rendered Successfully
2023-11-06 15:05:10,707:INFO:plot_model() successfully completed......................................
2023-11-06 16:18:35,046:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-06 16:18:35,046:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-06 16:18:35,047:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-06 16:18:35,047:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-06 16:18:35,317:INFO:PyCaret RegressionExperiment
2023-11-06 16:18:35,318:INFO:Logging name: reg-default-name
2023-11-06 16:18:35,318:INFO:ML Usecase: MLUsecase.REGRESSION
2023-11-06 16:18:35,318:INFO:version 3.1.0
2023-11-06 16:18:35,318:INFO:Initializing setup()
2023-11-06 16:18:35,318:INFO:self.USI: 3539
2023-11-06 16:18:35,318:INFO:self._variable_keys: {'target_param', 'y', 'log_plots_param', 'seed', 'gpu_n_jobs_param', 'X', 'fold_groups_param', 'y_test', 'pipeline', 'gpu_param', 'transform_target_param', '_ml_usecase', 'n_jobs_param', 'logging_param', 'idx', 'USI', 'memory', 'fold_shuffle_param', 'X_test', 'data', '_available_plots', 'fold_generator', 'html_param', 'X_train', 'exp_id', 'exp_name_log', 'y_train'}
2023-11-06 16:18:35,318:INFO:Checking environment
2023-11-06 16:18:35,318:INFO:python_version: 3.10.0
2023-11-06 16:18:35,318:INFO:python_build: ('tags/v3.10.0:b494f59', 'Oct  4 2021 19:00:18')
2023-11-06 16:18:35,318:INFO:machine: AMD64
2023-11-06 16:18:35,318:INFO:platform: Windows-10-10.0.19045-SP0
2023-11-06 16:18:35,322:INFO:Memory: svmem(total=17121947648, available=7243808768, percent=57.7, used=9878138880, free=7243808768)
2023-11-06 16:18:35,323:INFO:Physical Core: 4
2023-11-06 16:18:35,323:INFO:Logical Core: 4
2023-11-06 16:18:35,323:INFO:Checking libraries
2023-11-06 16:18:35,323:INFO:System:
2023-11-06 16:18:35,323:INFO:    python: 3.10.0 (tags/v3.10.0:b494f59, Oct  4 2021, 19:00:18) [MSC v.1929 64 bit (AMD64)]
2023-11-06 16:18:35,323:INFO:executable: c:\Users\joseba\AppData\Local\Programs\Python\Python310\python.exe
2023-11-06 16:18:35,323:INFO:   machine: Windows-10-10.0.19045-SP0
2023-11-06 16:18:35,323:INFO:PyCaret required dependencies:
2023-11-06 16:18:35,363:INFO:                 pip: 21.2.3
2023-11-06 16:18:35,363:INFO:          setuptools: 57.4.0
2023-11-06 16:18:35,363:INFO:             pycaret: 3.1.0
2023-11-06 16:18:35,363:INFO:             IPython: 8.17.2
2023-11-06 16:18:35,363:INFO:          ipywidgets: 8.1.1
2023-11-06 16:18:35,364:INFO:                tqdm: 4.66.1
2023-11-06 16:18:35,364:INFO:               numpy: 1.23.5
2023-11-06 16:18:35,364:INFO:              pandas: 1.5.3
2023-11-06 16:18:35,364:INFO:              jinja2: 3.1.2
2023-11-06 16:18:35,364:INFO:               scipy: 1.10.1
2023-11-06 16:18:35,364:INFO:              joblib: 1.3.2
2023-11-06 16:18:35,364:INFO:             sklearn: 1.2.2
2023-11-06 16:18:35,364:INFO:                pyod: 1.1.1
2023-11-06 16:18:35,364:INFO:            imblearn: 0.11.0
2023-11-06 16:18:35,366:INFO:   category_encoders: 2.6.3
2023-11-06 16:18:35,366:INFO:            lightgbm: 4.1.0
2023-11-06 16:18:35,366:INFO:               numba: 0.58.1
2023-11-06 16:18:35,366:INFO:            requests: 2.31.0
2023-11-06 16:18:35,366:INFO:          matplotlib: 3.8.1
2023-11-06 16:18:35,366:INFO:          scikitplot: 0.3.7
2023-11-06 16:18:35,366:INFO:         yellowbrick: 1.5
2023-11-06 16:18:35,366:INFO:              plotly: 5.18.0
2023-11-06 16:18:35,366:INFO:    plotly-resampler: Not installed
2023-11-06 16:18:35,366:INFO:             kaleido: 0.2.1
2023-11-06 16:18:35,366:INFO:           schemdraw: 0.15
2023-11-06 16:18:35,366:INFO:         statsmodels: 0.14.0
2023-11-06 16:18:35,367:INFO:              sktime: 0.21.1
2023-11-06 16:18:35,367:INFO:               tbats: 1.1.3
2023-11-06 16:18:35,367:INFO:            pmdarima: 2.0.4
2023-11-06 16:18:35,367:INFO:              psutil: 5.9.6
2023-11-06 16:18:35,367:INFO:          markupsafe: 2.1.3
2023-11-06 16:18:35,367:INFO:             pickle5: Not installed
2023-11-06 16:18:35,367:INFO:         cloudpickle: 3.0.0
2023-11-06 16:18:35,367:INFO:         deprecation: 2.1.0
2023-11-06 16:18:35,367:INFO:              xxhash: 3.4.1
2023-11-06 16:18:35,367:INFO:           wurlitzer: Not installed
2023-11-06 16:18:35,367:INFO:PyCaret optional dependencies:
2023-11-06 16:18:35,403:INFO:                shap: Not installed
2023-11-06 16:18:35,403:INFO:           interpret: Not installed
2023-11-06 16:18:35,403:INFO:                umap: Not installed
2023-11-06 16:18:35,403:INFO:     ydata_profiling: Not installed
2023-11-06 16:18:35,404:INFO:  explainerdashboard: Not installed
2023-11-06 16:18:35,404:INFO:             autoviz: Not installed
2023-11-06 16:18:35,404:INFO:           fairlearn: Not installed
2023-11-06 16:18:35,404:INFO:          deepchecks: Not installed
2023-11-06 16:18:35,404:INFO:             xgboost: Not installed
2023-11-06 16:18:35,404:INFO:            catboost: Not installed
2023-11-06 16:18:35,404:INFO:              kmodes: Not installed
2023-11-06 16:18:35,404:INFO:             mlxtend: Not installed
2023-11-06 16:18:35,404:INFO:       statsforecast: Not installed
2023-11-06 16:18:35,404:INFO:        tune_sklearn: Not installed
2023-11-06 16:18:35,404:INFO:                 ray: Not installed
2023-11-06 16:18:35,404:INFO:            hyperopt: Not installed
2023-11-06 16:18:35,404:INFO:              optuna: Not installed
2023-11-06 16:18:35,404:INFO:               skopt: Not installed
2023-11-06 16:18:35,404:INFO:              mlflow: Not installed
2023-11-06 16:18:35,404:INFO:              gradio: Not installed
2023-11-06 16:18:35,405:INFO:             fastapi: Not installed
2023-11-06 16:18:35,405:INFO:             uvicorn: Not installed
2023-11-06 16:18:35,405:INFO:              m2cgen: Not installed
2023-11-06 16:18:35,405:INFO:           evidently: Not installed
2023-11-06 16:18:35,405:INFO:               fugue: Not installed
2023-11-06 16:18:35,405:INFO:           streamlit: Not installed
2023-11-06 16:18:35,405:INFO:             prophet: Not installed
2023-11-06 16:18:35,405:INFO:None
2023-11-06 16:18:35,405:INFO:Set up data.
2023-11-06 16:18:35,421:INFO:Set up folding strategy.
2023-11-06 16:18:35,421:INFO:Set up train/test split.
2023-11-06 16:18:35,429:INFO:Set up index.
2023-11-06 16:18:35,431:INFO:Assigning column types.
2023-11-06 16:18:35,437:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-06 16:18:35,437:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-06 16:18:35,448:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-06 16:18:35,460:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-06 16:18:35,601:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-06 16:18:35,713:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-06 16:18:35,714:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 16:18:35,715:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 16:18:35,715:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-06 16:18:35,727:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-06 16:18:35,739:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-06 16:18:35,879:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-06 16:18:35,991:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-06 16:18:35,992:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 16:18:35,992:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 16:18:35,992:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-11-06 16:18:36,004:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-06 16:18:36,015:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-06 16:18:36,154:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-06 16:18:36,278:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-06 16:18:36,278:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 16:18:36,279:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 16:18:36,296:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-06 16:18:36,311:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-06 16:18:36,498:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-06 16:18:36,609:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-06 16:18:36,610:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 16:18:36,610:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 16:18:36,610:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-11-06 16:18:36,634:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-06 16:18:36,774:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-06 16:18:36,883:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-06 16:18:36,884:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 16:18:36,884:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 16:18:36,909:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-06 16:18:37,050:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-06 16:18:37,161:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-06 16:18:37,163:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 16:18:37,163:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 16:18:37,164:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-11-06 16:18:37,395:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-06 16:18:37,505:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-06 16:18:37,506:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 16:18:37,506:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 16:18:37,671:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-06 16:18:37,788:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-06 16:18:37,790:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 16:18:37,790:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 16:18:37,790:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-06 16:18:37,952:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-06 16:18:38,063:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 16:18:38,063:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 16:18:38,227:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-06 16:18:38,337:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 16:18:38,338:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 16:18:38,338:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-11-06 16:18:38,613:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 16:18:38,613:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 16:18:38,888:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 16:18:38,888:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 16:18:38,891:INFO:Preparing preprocessing pipeline...
2023-11-06 16:18:38,891:INFO:Set up simple imputation.
2023-11-06 16:18:38,895:INFO:Set up encoding of categorical features.
2023-11-06 16:18:39,105:INFO:Finished creating preprocessing pipeline.
2023-11-06 16:18:39,120:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\joseba\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['accommodates', 'minimum_nights',
                                             'maximum_nights'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood_group',
                                             'property_type', 'room_type'],
                                    transformer=SimpleImputer(strateg...ent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['neighbourhood_group',
                                             'room_type'],
                                    transformer=OneHotEncoder(cols=['neighbourhood_group',
                                                                    'room_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['property_type'],
                                    transformer=TargetEncoder(cols=['property_type'],
                                                              handle_missing='return_nan')))])
2023-11-06 16:18:39,120:INFO:Creating final display dataframe.
2023-11-06 16:18:39,525:INFO:Setup _display_container:                     Description             Value
0                    Session id              4527
1                        Target             price
2                   Target type        Regression
3           Original data shape        (13134, 7)
4        Transformed data shape       (13134, 21)
5   Transformed train set shape        (9193, 21)
6    Transformed test set shape        (3941, 21)
7              Numeric features                 3
8          Categorical features                 3
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              3539
2023-11-06 16:18:39,806:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 16:18:39,806:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 16:18:40,078:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 16:18:40,078:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-06 16:18:40,079:INFO:setup() successfully completed in 4.76s...............
2023-11-06 16:18:40,099:INFO:Initializing compare_models()
2023-11-06 16:18:40,099:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002573ED51480>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000002573ED51480>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-11-06 16:18:40,100:INFO:Checking exceptions
2023-11-06 16:18:40,103:INFO:Preparing display monitor
2023-11-06 16:18:40,141:INFO:Initializing Linear Regression
2023-11-06 16:18:40,141:INFO:Total runtime is 0.0 minutes
2023-11-06 16:18:40,146:INFO:SubProcess create_model() called ==================================
2023-11-06 16:18:40,146:INFO:Initializing create_model()
2023-11-06 16:18:40,147:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002573ED51480>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002572C4947F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 16:18:40,147:INFO:Checking exceptions
2023-11-06 16:18:40,147:INFO:Importing libraries
2023-11-06 16:18:40,147:INFO:Copying training dataset
2023-11-06 16:18:40,159:INFO:Defining folds
2023-11-06 16:18:40,160:INFO:Declaring metric variables
2023-11-06 16:18:40,166:INFO:Importing untrained model
2023-11-06 16:18:40,171:INFO:Linear Regression Imported successfully
2023-11-06 16:18:40,182:INFO:Starting cross validation
2023-11-06 16:18:40,194:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 16:18:44,456:INFO:Calculating mean and std
2023-11-06 16:18:44,458:INFO:Creating metrics dataframe
2023-11-06 16:18:44,463:INFO:Uploading results into container
2023-11-06 16:18:44,464:INFO:Uploading model into container now
2023-11-06 16:18:44,464:INFO:_master_model_container: 1
2023-11-06 16:18:44,464:INFO:_display_container: 2
2023-11-06 16:18:44,465:INFO:LinearRegression(n_jobs=-1)
2023-11-06 16:18:44,465:INFO:create_model() successfully completed......................................
2023-11-06 16:18:44,540:INFO:SubProcess create_model() end ==================================
2023-11-06 16:18:44,541:INFO:Creating metrics dataframe
2023-11-06 16:18:44,551:INFO:Initializing Lasso Regression
2023-11-06 16:18:44,552:INFO:Total runtime is 0.07351376215616862 minutes
2023-11-06 16:18:44,557:INFO:SubProcess create_model() called ==================================
2023-11-06 16:18:44,557:INFO:Initializing create_model()
2023-11-06 16:18:44,557:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002573ED51480>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002572C4947F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 16:18:44,557:INFO:Checking exceptions
2023-11-06 16:18:44,557:INFO:Importing libraries
2023-11-06 16:18:44,557:INFO:Copying training dataset
2023-11-06 16:18:44,566:INFO:Defining folds
2023-11-06 16:18:44,566:INFO:Declaring metric variables
2023-11-06 16:18:44,571:INFO:Importing untrained model
2023-11-06 16:18:44,576:INFO:Lasso Regression Imported successfully
2023-11-06 16:18:44,585:INFO:Starting cross validation
2023-11-06 16:18:44,587:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 16:18:45,173:INFO:Calculating mean and std
2023-11-06 16:18:45,175:INFO:Creating metrics dataframe
2023-11-06 16:18:45,180:INFO:Uploading results into container
2023-11-06 16:18:45,181:INFO:Uploading model into container now
2023-11-06 16:18:45,181:INFO:_master_model_container: 2
2023-11-06 16:18:45,182:INFO:_display_container: 2
2023-11-06 16:18:45,182:INFO:Lasso(random_state=4527)
2023-11-06 16:18:45,182:INFO:create_model() successfully completed......................................
2023-11-06 16:18:45,261:INFO:SubProcess create_model() end ==================================
2023-11-06 16:18:45,261:INFO:Creating metrics dataframe
2023-11-06 16:18:45,273:INFO:Initializing Ridge Regression
2023-11-06 16:18:45,273:INFO:Total runtime is 0.08553142150243123 minutes
2023-11-06 16:18:45,278:INFO:SubProcess create_model() called ==================================
2023-11-06 16:18:45,278:INFO:Initializing create_model()
2023-11-06 16:18:45,278:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002573ED51480>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002572C4947F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 16:18:45,278:INFO:Checking exceptions
2023-11-06 16:18:45,278:INFO:Importing libraries
2023-11-06 16:18:45,278:INFO:Copying training dataset
2023-11-06 16:18:45,286:INFO:Defining folds
2023-11-06 16:18:45,287:INFO:Declaring metric variables
2023-11-06 16:18:45,291:INFO:Importing untrained model
2023-11-06 16:18:45,297:INFO:Ridge Regression Imported successfully
2023-11-06 16:18:45,306:INFO:Starting cross validation
2023-11-06 16:18:45,308:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 16:18:45,919:INFO:Calculating mean and std
2023-11-06 16:18:45,921:INFO:Creating metrics dataframe
2023-11-06 16:18:45,927:INFO:Uploading results into container
2023-11-06 16:18:45,927:INFO:Uploading model into container now
2023-11-06 16:18:45,928:INFO:_master_model_container: 3
2023-11-06 16:18:45,928:INFO:_display_container: 2
2023-11-06 16:18:45,929:INFO:Ridge(random_state=4527)
2023-11-06 16:18:45,929:INFO:create_model() successfully completed......................................
2023-11-06 16:18:46,004:INFO:SubProcess create_model() end ==================================
2023-11-06 16:18:46,004:INFO:Creating metrics dataframe
2023-11-06 16:18:46,016:INFO:Initializing Elastic Net
2023-11-06 16:18:46,016:INFO:Total runtime is 0.09791112343470255 minutes
2023-11-06 16:18:46,022:INFO:SubProcess create_model() called ==================================
2023-11-06 16:18:46,023:INFO:Initializing create_model()
2023-11-06 16:18:46,023:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002573ED51480>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002572C4947F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 16:18:46,023:INFO:Checking exceptions
2023-11-06 16:18:46,023:INFO:Importing libraries
2023-11-06 16:18:46,023:INFO:Copying training dataset
2023-11-06 16:18:46,031:INFO:Defining folds
2023-11-06 16:18:46,032:INFO:Declaring metric variables
2023-11-06 16:18:46,038:INFO:Importing untrained model
2023-11-06 16:18:46,042:INFO:Elastic Net Imported successfully
2023-11-06 16:18:46,051:INFO:Starting cross validation
2023-11-06 16:18:46,053:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 16:18:46,665:INFO:Calculating mean and std
2023-11-06 16:18:46,667:INFO:Creating metrics dataframe
2023-11-06 16:18:46,671:INFO:Uploading results into container
2023-11-06 16:18:46,671:INFO:Uploading model into container now
2023-11-06 16:18:46,673:INFO:_master_model_container: 4
2023-11-06 16:18:46,673:INFO:_display_container: 2
2023-11-06 16:18:46,673:INFO:ElasticNet(random_state=4527)
2023-11-06 16:18:46,673:INFO:create_model() successfully completed......................................
2023-11-06 16:18:46,749:INFO:SubProcess create_model() end ==================================
2023-11-06 16:18:46,749:INFO:Creating metrics dataframe
2023-11-06 16:18:46,762:INFO:Initializing Least Angle Regression
2023-11-06 16:18:46,763:INFO:Total runtime is 0.1103696346282959 minutes
2023-11-06 16:18:46,768:INFO:SubProcess create_model() called ==================================
2023-11-06 16:18:46,768:INFO:Initializing create_model()
2023-11-06 16:18:46,768:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002573ED51480>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002572C4947F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 16:18:46,768:INFO:Checking exceptions
2023-11-06 16:18:46,769:INFO:Importing libraries
2023-11-06 16:18:46,769:INFO:Copying training dataset
2023-11-06 16:18:46,777:INFO:Defining folds
2023-11-06 16:18:46,778:INFO:Declaring metric variables
2023-11-06 16:18:46,783:INFO:Importing untrained model
2023-11-06 16:18:46,788:INFO:Least Angle Regression Imported successfully
2023-11-06 16:18:46,798:INFO:Starting cross validation
2023-11-06 16:18:46,800:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 16:18:47,404:INFO:Calculating mean and std
2023-11-06 16:18:47,404:INFO:Creating metrics dataframe
2023-11-06 16:18:47,409:INFO:Uploading results into container
2023-11-06 16:18:47,410:INFO:Uploading model into container now
2023-11-06 16:18:47,410:INFO:_master_model_container: 5
2023-11-06 16:18:47,411:INFO:_display_container: 2
2023-11-06 16:18:47,411:INFO:Lars(random_state=4527)
2023-11-06 16:18:47,411:INFO:create_model() successfully completed......................................
2023-11-06 16:18:47,488:INFO:SubProcess create_model() end ==================================
2023-11-06 16:18:47,489:INFO:Creating metrics dataframe
2023-11-06 16:18:47,502:INFO:Initializing Lasso Least Angle Regression
2023-11-06 16:18:47,502:INFO:Total runtime is 0.12269249359766642 minutes
2023-11-06 16:18:47,506:INFO:SubProcess create_model() called ==================================
2023-11-06 16:18:47,506:INFO:Initializing create_model()
2023-11-06 16:18:47,506:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002573ED51480>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002572C4947F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 16:18:47,507:INFO:Checking exceptions
2023-11-06 16:18:47,507:INFO:Importing libraries
2023-11-06 16:18:47,507:INFO:Copying training dataset
2023-11-06 16:18:47,516:INFO:Defining folds
2023-11-06 16:18:47,517:INFO:Declaring metric variables
2023-11-06 16:18:47,521:INFO:Importing untrained model
2023-11-06 16:18:47,528:INFO:Lasso Least Angle Regression Imported successfully
2023-11-06 16:18:47,536:INFO:Starting cross validation
2023-11-06 16:18:47,537:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 16:18:48,177:INFO:Calculating mean and std
2023-11-06 16:18:48,179:INFO:Creating metrics dataframe
2023-11-06 16:18:48,184:INFO:Uploading results into container
2023-11-06 16:18:48,184:INFO:Uploading model into container now
2023-11-06 16:18:48,185:INFO:_master_model_container: 6
2023-11-06 16:18:48,185:INFO:_display_container: 2
2023-11-06 16:18:48,185:INFO:LassoLars(random_state=4527)
2023-11-06 16:18:48,185:INFO:create_model() successfully completed......................................
2023-11-06 16:18:48,261:INFO:SubProcess create_model() end ==================================
2023-11-06 16:18:48,261:INFO:Creating metrics dataframe
2023-11-06 16:18:48,275:INFO:Initializing Orthogonal Matching Pursuit
2023-11-06 16:18:48,275:INFO:Total runtime is 0.1355728228886922 minutes
2023-11-06 16:18:48,280:INFO:SubProcess create_model() called ==================================
2023-11-06 16:18:48,281:INFO:Initializing create_model()
2023-11-06 16:18:48,281:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002573ED51480>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002572C4947F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 16:18:48,281:INFO:Checking exceptions
2023-11-06 16:18:48,281:INFO:Importing libraries
2023-11-06 16:18:48,281:INFO:Copying training dataset
2023-11-06 16:18:48,290:INFO:Defining folds
2023-11-06 16:18:48,290:INFO:Declaring metric variables
2023-11-06 16:18:48,296:INFO:Importing untrained model
2023-11-06 16:18:48,301:INFO:Orthogonal Matching Pursuit Imported successfully
2023-11-06 16:18:48,309:INFO:Starting cross validation
2023-11-06 16:18:48,311:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 16:18:48,910:INFO:Calculating mean and std
2023-11-06 16:18:48,911:INFO:Creating metrics dataframe
2023-11-06 16:18:48,918:INFO:Uploading results into container
2023-11-06 16:18:48,919:INFO:Uploading model into container now
2023-11-06 16:18:48,919:INFO:_master_model_container: 7
2023-11-06 16:18:48,919:INFO:_display_container: 2
2023-11-06 16:18:48,919:INFO:OrthogonalMatchingPursuit()
2023-11-06 16:18:48,919:INFO:create_model() successfully completed......................................
2023-11-06 16:18:48,998:INFO:SubProcess create_model() end ==================================
2023-11-06 16:18:48,998:INFO:Creating metrics dataframe
2023-11-06 16:18:49,012:INFO:Initializing Bayesian Ridge
2023-11-06 16:18:49,012:INFO:Total runtime is 0.1478539745012919 minutes
2023-11-06 16:18:49,017:INFO:SubProcess create_model() called ==================================
2023-11-06 16:18:49,017:INFO:Initializing create_model()
2023-11-06 16:18:49,017:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002573ED51480>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002572C4947F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 16:18:49,017:INFO:Checking exceptions
2023-11-06 16:18:49,017:INFO:Importing libraries
2023-11-06 16:18:49,017:INFO:Copying training dataset
2023-11-06 16:18:49,025:INFO:Defining folds
2023-11-06 16:18:49,026:INFO:Declaring metric variables
2023-11-06 16:18:49,031:INFO:Importing untrained model
2023-11-06 16:18:49,037:INFO:Bayesian Ridge Imported successfully
2023-11-06 16:18:49,045:INFO:Starting cross validation
2023-11-06 16:18:49,048:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 16:18:49,637:INFO:Calculating mean and std
2023-11-06 16:18:49,639:INFO:Creating metrics dataframe
2023-11-06 16:18:49,643:INFO:Uploading results into container
2023-11-06 16:18:49,643:INFO:Uploading model into container now
2023-11-06 16:18:49,644:INFO:_master_model_container: 8
2023-11-06 16:18:49,644:INFO:_display_container: 2
2023-11-06 16:18:49,644:INFO:BayesianRidge()
2023-11-06 16:18:49,644:INFO:create_model() successfully completed......................................
2023-11-06 16:18:49,723:INFO:SubProcess create_model() end ==================================
2023-11-06 16:18:49,723:INFO:Creating metrics dataframe
2023-11-06 16:18:49,738:INFO:Initializing Passive Aggressive Regressor
2023-11-06 16:18:49,738:INFO:Total runtime is 0.15995434522628782 minutes
2023-11-06 16:18:49,743:INFO:SubProcess create_model() called ==================================
2023-11-06 16:18:49,744:INFO:Initializing create_model()
2023-11-06 16:18:49,744:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002573ED51480>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002572C4947F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 16:18:49,744:INFO:Checking exceptions
2023-11-06 16:18:49,744:INFO:Importing libraries
2023-11-06 16:18:49,744:INFO:Copying training dataset
2023-11-06 16:18:49,752:INFO:Defining folds
2023-11-06 16:18:49,752:INFO:Declaring metric variables
2023-11-06 16:18:49,759:INFO:Importing untrained model
2023-11-06 16:18:49,764:INFO:Passive Aggressive Regressor Imported successfully
2023-11-06 16:18:49,772:INFO:Starting cross validation
2023-11-06 16:18:49,774:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 16:18:50,391:INFO:Calculating mean and std
2023-11-06 16:18:50,393:INFO:Creating metrics dataframe
2023-11-06 16:18:50,397:INFO:Uploading results into container
2023-11-06 16:18:50,398:INFO:Uploading model into container now
2023-11-06 16:18:50,399:INFO:_master_model_container: 9
2023-11-06 16:18:50,399:INFO:_display_container: 2
2023-11-06 16:18:50,400:INFO:PassiveAggressiveRegressor(random_state=4527)
2023-11-06 16:18:50,400:INFO:create_model() successfully completed......................................
2023-11-06 16:18:50,475:INFO:SubProcess create_model() end ==================================
2023-11-06 16:18:50,475:INFO:Creating metrics dataframe
2023-11-06 16:18:50,489:INFO:Initializing Huber Regressor
2023-11-06 16:18:50,490:INFO:Total runtime is 0.17248632907867428 minutes
2023-11-06 16:18:50,494:INFO:SubProcess create_model() called ==================================
2023-11-06 16:18:50,494:INFO:Initializing create_model()
2023-11-06 16:18:50,494:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002573ED51480>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002572C4947F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 16:18:50,495:INFO:Checking exceptions
2023-11-06 16:18:50,495:INFO:Importing libraries
2023-11-06 16:18:50,495:INFO:Copying training dataset
2023-11-06 16:18:50,503:INFO:Defining folds
2023-11-06 16:18:50,504:INFO:Declaring metric variables
2023-11-06 16:18:50,509:INFO:Importing untrained model
2023-11-06 16:18:50,514:INFO:Huber Regressor Imported successfully
2023-11-06 16:18:50,522:INFO:Starting cross validation
2023-11-06 16:18:50,524:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 16:18:51,003:WARNING:c:\Users\joseba\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-06 16:18:51,063:WARNING:c:\Users\joseba\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-06 16:18:51,095:WARNING:c:\Users\joseba\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-06 16:18:51,121:WARNING:c:\Users\joseba\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-06 16:18:51,571:WARNING:c:\Users\joseba\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-06 16:18:51,639:WARNING:c:\Users\joseba\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-06 16:18:51,641:WARNING:c:\Users\joseba\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-06 16:18:51,682:WARNING:c:\Users\joseba\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-06 16:18:51,983:WARNING:c:\Users\joseba\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-06 16:18:52,031:WARNING:c:\Users\joseba\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-06 16:18:52,081:INFO:Calculating mean and std
2023-11-06 16:18:52,083:INFO:Creating metrics dataframe
2023-11-06 16:18:52,089:INFO:Uploading results into container
2023-11-06 16:18:52,089:INFO:Uploading model into container now
2023-11-06 16:18:52,090:INFO:_master_model_container: 10
2023-11-06 16:18:52,090:INFO:_display_container: 2
2023-11-06 16:18:52,091:INFO:HuberRegressor()
2023-11-06 16:18:52,091:INFO:create_model() successfully completed......................................
2023-11-06 16:18:52,164:INFO:SubProcess create_model() end ==================================
2023-11-06 16:18:52,164:INFO:Creating metrics dataframe
2023-11-06 16:18:52,179:INFO:Initializing K Neighbors Regressor
2023-11-06 16:18:52,179:INFO:Total runtime is 0.20063838561375932 minutes
2023-11-06 16:18:52,184:INFO:SubProcess create_model() called ==================================
2023-11-06 16:18:52,184:INFO:Initializing create_model()
2023-11-06 16:18:52,184:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002573ED51480>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002572C4947F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 16:18:52,184:INFO:Checking exceptions
2023-11-06 16:18:52,185:INFO:Importing libraries
2023-11-06 16:18:52,185:INFO:Copying training dataset
2023-11-06 16:18:52,192:INFO:Defining folds
2023-11-06 16:18:52,192:INFO:Declaring metric variables
2023-11-06 16:18:52,198:INFO:Importing untrained model
2023-11-06 16:18:52,203:INFO:K Neighbors Regressor Imported successfully
2023-11-06 16:18:52,212:INFO:Starting cross validation
2023-11-06 16:18:52,214:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 16:18:53,060:INFO:Calculating mean and std
2023-11-06 16:18:53,062:INFO:Creating metrics dataframe
2023-11-06 16:18:53,066:INFO:Uploading results into container
2023-11-06 16:18:53,067:INFO:Uploading model into container now
2023-11-06 16:18:53,068:INFO:_master_model_container: 11
2023-11-06 16:18:53,068:INFO:_display_container: 2
2023-11-06 16:18:53,068:INFO:KNeighborsRegressor(n_jobs=-1)
2023-11-06 16:18:53,068:INFO:create_model() successfully completed......................................
2023-11-06 16:18:53,142:INFO:SubProcess create_model() end ==================================
2023-11-06 16:18:53,143:INFO:Creating metrics dataframe
2023-11-06 16:18:53,158:INFO:Initializing Decision Tree Regressor
2023-11-06 16:18:53,158:INFO:Total runtime is 0.21695150931676224 minutes
2023-11-06 16:18:53,162:INFO:SubProcess create_model() called ==================================
2023-11-06 16:18:53,162:INFO:Initializing create_model()
2023-11-06 16:18:53,162:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002573ED51480>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002572C4947F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 16:18:53,163:INFO:Checking exceptions
2023-11-06 16:18:53,163:INFO:Importing libraries
2023-11-06 16:18:53,163:INFO:Copying training dataset
2023-11-06 16:18:53,172:INFO:Defining folds
2023-11-06 16:18:53,172:INFO:Declaring metric variables
2023-11-06 16:18:53,177:INFO:Importing untrained model
2023-11-06 16:18:53,182:INFO:Decision Tree Regressor Imported successfully
2023-11-06 16:18:53,190:INFO:Starting cross validation
2023-11-06 16:18:53,192:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 16:18:53,818:INFO:Calculating mean and std
2023-11-06 16:18:53,819:INFO:Creating metrics dataframe
2023-11-06 16:18:53,824:INFO:Uploading results into container
2023-11-06 16:18:53,825:INFO:Uploading model into container now
2023-11-06 16:18:53,825:INFO:_master_model_container: 12
2023-11-06 16:18:53,825:INFO:_display_container: 2
2023-11-06 16:18:53,826:INFO:DecisionTreeRegressor(random_state=4527)
2023-11-06 16:18:53,826:INFO:create_model() successfully completed......................................
2023-11-06 16:18:53,899:INFO:SubProcess create_model() end ==================================
2023-11-06 16:18:53,900:INFO:Creating metrics dataframe
2023-11-06 16:18:53,916:INFO:Initializing Random Forest Regressor
2023-11-06 16:18:53,916:INFO:Total runtime is 0.22958343029022213 minutes
2023-11-06 16:18:53,920:INFO:SubProcess create_model() called ==================================
2023-11-06 16:18:53,920:INFO:Initializing create_model()
2023-11-06 16:18:53,920:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002573ED51480>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002572C4947F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 16:18:53,920:INFO:Checking exceptions
2023-11-06 16:18:53,920:INFO:Importing libraries
2023-11-06 16:18:53,920:INFO:Copying training dataset
2023-11-06 16:18:53,929:INFO:Defining folds
2023-11-06 16:18:53,929:INFO:Declaring metric variables
2023-11-06 16:18:53,935:INFO:Importing untrained model
2023-11-06 16:18:53,939:INFO:Random Forest Regressor Imported successfully
2023-11-06 16:18:53,949:INFO:Starting cross validation
2023-11-06 16:18:53,952:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 16:19:00,725:INFO:Calculating mean and std
2023-11-06 16:19:00,726:INFO:Creating metrics dataframe
2023-11-06 16:19:00,730:INFO:Uploading results into container
2023-11-06 16:19:00,731:INFO:Uploading model into container now
2023-11-06 16:19:00,731:INFO:_master_model_container: 13
2023-11-06 16:19:00,732:INFO:_display_container: 2
2023-11-06 16:19:00,732:INFO:RandomForestRegressor(n_jobs=-1, random_state=4527)
2023-11-06 16:19:00,733:INFO:create_model() successfully completed......................................
2023-11-06 16:19:00,808:INFO:SubProcess create_model() end ==================================
2023-11-06 16:19:00,808:INFO:Creating metrics dataframe
2023-11-06 16:19:00,824:INFO:Initializing Extra Trees Regressor
2023-11-06 16:19:00,825:INFO:Total runtime is 0.34472380479176834 minutes
2023-11-06 16:19:00,829:INFO:SubProcess create_model() called ==================================
2023-11-06 16:19:00,830:INFO:Initializing create_model()
2023-11-06 16:19:00,830:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002573ED51480>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002572C4947F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 16:19:00,830:INFO:Checking exceptions
2023-11-06 16:19:00,830:INFO:Importing libraries
2023-11-06 16:19:00,830:INFO:Copying training dataset
2023-11-06 16:19:00,838:INFO:Defining folds
2023-11-06 16:19:00,839:INFO:Declaring metric variables
2023-11-06 16:19:00,844:INFO:Importing untrained model
2023-11-06 16:19:00,848:INFO:Extra Trees Regressor Imported successfully
2023-11-06 16:19:00,857:INFO:Starting cross validation
2023-11-06 16:19:00,859:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 16:19:06,998:INFO:Calculating mean and std
2023-11-06 16:19:07,000:INFO:Creating metrics dataframe
2023-11-06 16:19:07,005:INFO:Uploading results into container
2023-11-06 16:19:07,005:INFO:Uploading model into container now
2023-11-06 16:19:07,006:INFO:_master_model_container: 14
2023-11-06 16:19:07,006:INFO:_display_container: 2
2023-11-06 16:19:07,006:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=4527)
2023-11-06 16:19:07,006:INFO:create_model() successfully completed......................................
2023-11-06 16:19:07,082:INFO:SubProcess create_model() end ==================================
2023-11-06 16:19:07,083:INFO:Creating metrics dataframe
2023-11-06 16:19:07,098:INFO:Initializing AdaBoost Regressor
2023-11-06 16:19:07,098:INFO:Total runtime is 0.4492923577626546 minutes
2023-11-06 16:19:07,102:INFO:SubProcess create_model() called ==================================
2023-11-06 16:19:07,103:INFO:Initializing create_model()
2023-11-06 16:19:07,103:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002573ED51480>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002572C4947F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 16:19:07,103:INFO:Checking exceptions
2023-11-06 16:19:07,103:INFO:Importing libraries
2023-11-06 16:19:07,103:INFO:Copying training dataset
2023-11-06 16:19:07,112:INFO:Defining folds
2023-11-06 16:19:07,112:INFO:Declaring metric variables
2023-11-06 16:19:07,117:INFO:Importing untrained model
2023-11-06 16:19:07,123:INFO:AdaBoost Regressor Imported successfully
2023-11-06 16:19:07,133:INFO:Starting cross validation
2023-11-06 16:19:07,137:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 16:19:08,289:INFO:Calculating mean and std
2023-11-06 16:19:08,291:INFO:Creating metrics dataframe
2023-11-06 16:19:08,297:INFO:Uploading results into container
2023-11-06 16:19:08,298:INFO:Uploading model into container now
2023-11-06 16:19:08,298:INFO:_master_model_container: 15
2023-11-06 16:19:08,298:INFO:_display_container: 2
2023-11-06 16:19:08,298:INFO:AdaBoostRegressor(random_state=4527)
2023-11-06 16:19:08,298:INFO:create_model() successfully completed......................................
2023-11-06 16:19:08,374:INFO:SubProcess create_model() end ==================================
2023-11-06 16:19:08,374:INFO:Creating metrics dataframe
2023-11-06 16:19:08,390:INFO:Initializing Gradient Boosting Regressor
2023-11-06 16:19:08,390:INFO:Total runtime is 0.47081097364425656 minutes
2023-11-06 16:19:08,395:INFO:SubProcess create_model() called ==================================
2023-11-06 16:19:08,395:INFO:Initializing create_model()
2023-11-06 16:19:08,395:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002573ED51480>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002572C4947F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 16:19:08,396:INFO:Checking exceptions
2023-11-06 16:19:08,396:INFO:Importing libraries
2023-11-06 16:19:08,396:INFO:Copying training dataset
2023-11-06 16:19:08,403:INFO:Defining folds
2023-11-06 16:19:08,403:INFO:Declaring metric variables
2023-11-06 16:19:08,408:INFO:Importing untrained model
2023-11-06 16:19:08,412:INFO:Gradient Boosting Regressor Imported successfully
2023-11-06 16:19:08,422:INFO:Starting cross validation
2023-11-06 16:19:08,424:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 16:19:10,673:INFO:Calculating mean and std
2023-11-06 16:19:10,675:INFO:Creating metrics dataframe
2023-11-06 16:19:10,679:INFO:Uploading results into container
2023-11-06 16:19:10,679:INFO:Uploading model into container now
2023-11-06 16:19:10,680:INFO:_master_model_container: 16
2023-11-06 16:19:10,680:INFO:_display_container: 2
2023-11-06 16:19:10,680:INFO:GradientBoostingRegressor(random_state=4527)
2023-11-06 16:19:10,680:INFO:create_model() successfully completed......................................
2023-11-06 16:19:10,756:INFO:SubProcess create_model() end ==================================
2023-11-06 16:19:10,756:INFO:Creating metrics dataframe
2023-11-06 16:19:10,773:INFO:Initializing Light Gradient Boosting Machine
2023-11-06 16:19:10,773:INFO:Total runtime is 0.5105410933494567 minutes
2023-11-06 16:19:10,777:INFO:SubProcess create_model() called ==================================
2023-11-06 16:19:10,778:INFO:Initializing create_model()
2023-11-06 16:19:10,778:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002573ED51480>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002572C4947F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 16:19:10,778:INFO:Checking exceptions
2023-11-06 16:19:10,778:INFO:Importing libraries
2023-11-06 16:19:10,778:INFO:Copying training dataset
2023-11-06 16:19:10,786:INFO:Defining folds
2023-11-06 16:19:10,786:INFO:Declaring metric variables
2023-11-06 16:19:10,792:INFO:Importing untrained model
2023-11-06 16:19:10,798:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-06 16:19:10,808:INFO:Starting cross validation
2023-11-06 16:19:10,810:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 16:19:12,044:INFO:Calculating mean and std
2023-11-06 16:19:12,046:INFO:Creating metrics dataframe
2023-11-06 16:19:12,051:INFO:Uploading results into container
2023-11-06 16:19:12,052:INFO:Uploading model into container now
2023-11-06 16:19:12,053:INFO:_master_model_container: 17
2023-11-06 16:19:12,053:INFO:_display_container: 2
2023-11-06 16:19:12,053:INFO:LGBMRegressor(n_jobs=-1, random_state=4527)
2023-11-06 16:19:12,053:INFO:create_model() successfully completed......................................
2023-11-06 16:19:12,127:INFO:SubProcess create_model() end ==================================
2023-11-06 16:19:12,127:INFO:Creating metrics dataframe
2023-11-06 16:19:12,145:INFO:Initializing Dummy Regressor
2023-11-06 16:19:12,146:INFO:Total runtime is 0.5334231336911519 minutes
2023-11-06 16:19:12,150:INFO:SubProcess create_model() called ==================================
2023-11-06 16:19:12,151:INFO:Initializing create_model()
2023-11-06 16:19:12,151:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002573ED51480>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002572C4947F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 16:19:12,151:INFO:Checking exceptions
2023-11-06 16:19:12,151:INFO:Importing libraries
2023-11-06 16:19:12,151:INFO:Copying training dataset
2023-11-06 16:19:12,159:INFO:Defining folds
2023-11-06 16:19:12,159:INFO:Declaring metric variables
2023-11-06 16:19:12,164:INFO:Importing untrained model
2023-11-06 16:19:12,169:INFO:Dummy Regressor Imported successfully
2023-11-06 16:19:12,178:INFO:Starting cross validation
2023-11-06 16:19:12,180:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 16:19:12,746:INFO:Calculating mean and std
2023-11-06 16:19:12,747:INFO:Creating metrics dataframe
2023-11-06 16:19:12,753:INFO:Uploading results into container
2023-11-06 16:19:12,754:INFO:Uploading model into container now
2023-11-06 16:19:12,755:INFO:_master_model_container: 18
2023-11-06 16:19:12,755:INFO:_display_container: 2
2023-11-06 16:19:12,755:INFO:DummyRegressor()
2023-11-06 16:19:12,755:INFO:create_model() successfully completed......................................
2023-11-06 16:19:12,831:INFO:SubProcess create_model() end ==================================
2023-11-06 16:19:12,831:INFO:Creating metrics dataframe
2023-11-06 16:19:12,861:INFO:Initializing create_model()
2023-11-06 16:19:12,861:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002573ED51480>, estimator=LGBMRegressor(n_jobs=-1, random_state=4527), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-06 16:19:12,861:INFO:Checking exceptions
2023-11-06 16:19:12,863:INFO:Importing libraries
2023-11-06 16:19:12,863:INFO:Copying training dataset
2023-11-06 16:19:12,870:INFO:Defining folds
2023-11-06 16:19:12,871:INFO:Declaring metric variables
2023-11-06 16:19:12,871:INFO:Importing untrained model
2023-11-06 16:19:12,871:INFO:Declaring custom model
2023-11-06 16:19:12,872:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-06 16:19:12,874:INFO:Cross validation set to False
2023-11-06 16:19:12,874:INFO:Fitting Model
2023-11-06 16:19:12,989:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2023-11-06 16:19:12,990:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000146 seconds.
2023-11-06 16:19:12,990:INFO:You can set `force_row_wise=true` to remove the overhead.
2023-11-06 16:19:12,990:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2023-11-06 16:19:12,991:INFO:[LightGBM] [Info] Total Bins 275
2023-11-06 16:19:12,991:INFO:[LightGBM] [Info] Number of data points in the train set: 9193, number of used features: 20
2023-11-06 16:19:12,991:INFO:[LightGBM] [Info] Start training from score 107.389699
2023-11-06 16:19:13,051:INFO:LGBMRegressor(n_jobs=-1, random_state=4527)
2023-11-06 16:19:13,051:INFO:create_model() successfully completed......................................
2023-11-06 16:19:13,170:INFO:_master_model_container: 18
2023-11-06 16:19:13,171:INFO:_display_container: 2
2023-11-06 16:19:13,171:INFO:LGBMRegressor(n_jobs=-1, random_state=4527)
2023-11-06 16:19:13,171:INFO:compare_models() successfully completed......................................
2023-11-06 16:19:13,207:INFO:Initializing create_model()
2023-11-06 16:19:13,207:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002573ED51480>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-06 16:19:13,207:INFO:Checking exceptions
2023-11-06 16:19:13,227:INFO:Importing libraries
2023-11-06 16:19:13,227:INFO:Copying training dataset
2023-11-06 16:19:13,236:INFO:Defining folds
2023-11-06 16:19:13,237:INFO:Declaring metric variables
2023-11-06 16:19:13,241:INFO:Importing untrained model
2023-11-06 16:19:13,248:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-06 16:19:13,261:INFO:Starting cross validation
2023-11-06 16:19:13,262:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 16:19:14,848:INFO:Calculating mean and std
2023-11-06 16:19:14,850:INFO:Creating metrics dataframe
2023-11-06 16:19:14,856:INFO:Finalizing model
2023-11-06 16:19:14,969:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2023-11-06 16:19:14,970:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000072 seconds.
2023-11-06 16:19:14,970:INFO:You can set `force_row_wise=true` to remove the overhead.
2023-11-06 16:19:14,970:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2023-11-06 16:19:14,970:INFO:[LightGBM] [Info] Total Bins 275
2023-11-06 16:19:14,970:INFO:[LightGBM] [Info] Number of data points in the train set: 9193, number of used features: 20
2023-11-06 16:19:14,971:INFO:[LightGBM] [Info] Start training from score 107.389699
2023-11-06 16:19:15,035:INFO:Uploading results into container
2023-11-06 16:19:15,036:INFO:Uploading model into container now
2023-11-06 16:19:15,048:INFO:_master_model_container: 19
2023-11-06 16:19:15,048:INFO:_display_container: 3
2023-11-06 16:19:15,049:INFO:LGBMRegressor(n_jobs=-1, random_state=4527)
2023-11-06 16:19:15,049:INFO:create_model() successfully completed......................................
2023-11-06 16:19:15,153:INFO:Initializing tune_model()
2023-11-06 16:19:15,153:INFO:tune_model(estimator=LGBMRegressor(n_jobs=-1, random_state=4527), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002573ED51480>)
2023-11-06 16:19:15,153:INFO:Checking exceptions
2023-11-06 16:19:15,176:INFO:Copying training dataset
2023-11-06 16:19:15,186:INFO:Checking base model
2023-11-06 16:19:15,186:INFO:Base model : Light Gradient Boosting Machine
2023-11-06 16:19:15,191:INFO:Declaring metric variables
2023-11-06 16:19:15,198:INFO:Defining Hyperparameters
2023-11-06 16:19:15,277:INFO:Tuning with n_jobs=-1
2023-11-06 16:19:15,277:INFO:Initializing RandomizedSearchCV
2023-11-06 16:19:39,793:INFO:best_params: {'actual_estimator__reg_lambda': 0.005, 'actual_estimator__reg_alpha': 1, 'actual_estimator__num_leaves': 8, 'actual_estimator__n_estimators': 240, 'actual_estimator__min_split_gain': 0, 'actual_estimator__min_child_samples': 21, 'actual_estimator__learning_rate': 0.2, 'actual_estimator__feature_fraction': 0.9, 'actual_estimator__bagging_freq': 3, 'actual_estimator__bagging_fraction': 0.4}
2023-11-06 16:19:39,795:INFO:Hyperparameter search completed
2023-11-06 16:19:39,795:INFO:SubProcess create_model() called ==================================
2023-11-06 16:19:39,796:INFO:Initializing create_model()
2023-11-06 16:19:39,796:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002573ED51480>, estimator=LGBMRegressor(n_jobs=-1, random_state=4527), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002573D2DBC70>, model_only=True, return_train_score=False, kwargs={'reg_lambda': 0.005, 'reg_alpha': 1, 'num_leaves': 8, 'n_estimators': 240, 'min_split_gain': 0, 'min_child_samples': 21, 'learning_rate': 0.2, 'feature_fraction': 0.9, 'bagging_freq': 3, 'bagging_fraction': 0.4})
2023-11-06 16:19:39,797:INFO:Checking exceptions
2023-11-06 16:19:39,797:INFO:Importing libraries
2023-11-06 16:19:39,797:INFO:Copying training dataset
2023-11-06 16:19:39,808:INFO:Defining folds
2023-11-06 16:19:39,808:INFO:Declaring metric variables
2023-11-06 16:19:39,813:INFO:Importing untrained model
2023-11-06 16:19:39,813:INFO:Declaring custom model
2023-11-06 16:19:39,820:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-06 16:19:39,831:INFO:Starting cross validation
2023-11-06 16:19:39,835:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 16:19:42,331:INFO:Calculating mean and std
2023-11-06 16:19:42,333:INFO:Creating metrics dataframe
2023-11-06 16:19:42,342:INFO:Finalizing model
2023-11-06 16:19:42,477:INFO:[LightGBM] [Warning] feature_fraction is set=0.9, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.9
2023-11-06 16:19:42,478:INFO:[LightGBM] [Warning] bagging_fraction is set=0.4, subsample=1.0 will be ignored. Current value: bagging_fraction=0.4
2023-11-06 16:19:42,478:INFO:[LightGBM] [Warning] bagging_freq is set=3, subsample_freq=0 will be ignored. Current value: bagging_freq=3
2023-11-06 16:19:42,484:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2023-11-06 16:19:42,484:INFO:[LightGBM] [Warning] feature_fraction is set=0.9, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.9
2023-11-06 16:19:42,485:INFO:[LightGBM] [Warning] bagging_fraction is set=0.4, subsample=1.0 will be ignored. Current value: bagging_fraction=0.4
2023-11-06 16:19:42,485:INFO:[LightGBM] [Warning] bagging_freq is set=3, subsample_freq=0 will be ignored. Current value: bagging_freq=3
2023-11-06 16:19:42,487:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000604 seconds.
2023-11-06 16:19:42,487:INFO:You can set `force_row_wise=true` to remove the overhead.
2023-11-06 16:19:42,487:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2023-11-06 16:19:42,488:INFO:[LightGBM] [Info] Total Bins 275
2023-11-06 16:19:42,488:INFO:[LightGBM] [Info] Number of data points in the train set: 9193, number of used features: 20
2023-11-06 16:19:42,488:INFO:[LightGBM] [Info] Start training from score 107.389699
2023-11-06 16:19:42,596:INFO:Uploading results into container
2023-11-06 16:19:42,597:INFO:Uploading model into container now
2023-11-06 16:19:42,598:INFO:_master_model_container: 20
2023-11-06 16:19:42,598:INFO:_display_container: 4
2023-11-06 16:19:42,599:INFO:LGBMRegressor(bagging_fraction=0.4, bagging_freq=3, feature_fraction=0.9,
              learning_rate=0.2, min_child_samples=21, min_split_gain=0,
              n_estimators=240, n_jobs=-1, num_leaves=8, random_state=4527,
              reg_alpha=1, reg_lambda=0.005)
2023-11-06 16:19:42,600:INFO:create_model() successfully completed......................................
2023-11-06 16:19:42,725:INFO:SubProcess create_model() end ==================================
2023-11-06 16:19:42,725:INFO:choose_better activated
2023-11-06 16:19:42,729:INFO:SubProcess create_model() called ==================================
2023-11-06 16:19:42,730:INFO:Initializing create_model()
2023-11-06 16:19:42,730:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002573ED51480>, estimator=LGBMRegressor(n_jobs=-1, random_state=4527), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-06 16:19:42,730:INFO:Checking exceptions
2023-11-06 16:19:42,733:INFO:Importing libraries
2023-11-06 16:19:42,733:INFO:Copying training dataset
2023-11-06 16:19:42,743:INFO:Defining folds
2023-11-06 16:19:42,744:INFO:Declaring metric variables
2023-11-06 16:19:42,744:INFO:Importing untrained model
2023-11-06 16:19:42,744:INFO:Declaring custom model
2023-11-06 16:19:42,745:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-06 16:19:42,745:INFO:Starting cross validation
2023-11-06 16:19:42,747:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 16:19:44,425:INFO:Calculating mean and std
2023-11-06 16:19:44,426:INFO:Creating metrics dataframe
2023-11-06 16:19:44,431:INFO:Finalizing model
2023-11-06 16:19:44,571:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2023-11-06 16:19:44,572:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000247 seconds.
2023-11-06 16:19:44,572:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-11-06 16:19:44,572:INFO:[LightGBM] [Info] Total Bins 275
2023-11-06 16:19:44,572:INFO:[LightGBM] [Info] Number of data points in the train set: 9193, number of used features: 20
2023-11-06 16:19:44,572:INFO:[LightGBM] [Info] Start training from score 107.389699
2023-11-06 16:19:44,679:INFO:Uploading results into container
2023-11-06 16:19:44,680:INFO:Uploading model into container now
2023-11-06 16:19:44,680:INFO:_master_model_container: 21
2023-11-06 16:19:44,680:INFO:_display_container: 5
2023-11-06 16:19:44,681:INFO:LGBMRegressor(n_jobs=-1, random_state=4527)
2023-11-06 16:19:44,681:INFO:create_model() successfully completed......................................
2023-11-06 16:19:44,779:INFO:SubProcess create_model() end ==================================
2023-11-06 16:19:44,779:INFO:LGBMRegressor(n_jobs=-1, random_state=4527) result for R2 is 0.6398
2023-11-06 16:19:44,780:INFO:LGBMRegressor(bagging_fraction=0.4, bagging_freq=3, feature_fraction=0.9,
              learning_rate=0.2, min_child_samples=21, min_split_gain=0,
              n_estimators=240, n_jobs=-1, num_leaves=8, random_state=4527,
              reg_alpha=1, reg_lambda=0.005) result for R2 is 0.6341
2023-11-06 16:19:44,781:INFO:LGBMRegressor(n_jobs=-1, random_state=4527) is best model
2023-11-06 16:19:44,781:INFO:choose_better completed
2023-11-06 16:19:44,781:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-11-06 16:19:44,796:INFO:_master_model_container: 21
2023-11-06 16:19:44,796:INFO:_display_container: 4
2023-11-06 16:19:44,797:INFO:LGBMRegressor(n_jobs=-1, random_state=4527)
2023-11-06 16:19:44,797:INFO:tune_model() successfully completed......................................
2023-11-06 16:19:44,935:INFO:Initializing evaluate_model()
2023-11-06 16:19:44,935:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002573ED51480>, estimator=LGBMRegressor(n_jobs=-1, random_state=4527), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2023-11-06 16:19:44,955:INFO:Initializing plot_model()
2023-11-06 16:19:44,955:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=LGBMRegressor(n_jobs=-1, random_state=4527), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002573ED51480>, system=True)
2023-11-06 16:19:44,955:INFO:Checking exceptions
2023-11-06 16:19:44,958:INFO:Preloading libraries
2023-11-06 16:19:44,971:INFO:Copying training dataset
2023-11-06 16:19:44,971:INFO:Plot type: pipeline
2023-11-06 16:19:45,267:INFO:Visual Rendered Successfully
2023-11-06 16:19:45,357:INFO:plot_model() successfully completed......................................
2023-11-06 16:19:45,472:INFO:Initializing finalize_model()
2023-11-06 16:19:45,473:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002573ED51480>, estimator=LGBMRegressor(n_jobs=-1, random_state=4527), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-11-06 16:19:45,473:INFO:Finalizing LGBMRegressor(n_jobs=-1, random_state=4527)
2023-11-06 16:19:45,478:INFO:Initializing create_model()
2023-11-06 16:19:45,478:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002573ED51480>, estimator=LGBMRegressor(n_jobs=-1, random_state=4527), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-11-06 16:19:45,478:INFO:Checking exceptions
2023-11-06 16:19:45,480:INFO:Importing libraries
2023-11-06 16:19:45,480:INFO:Copying training dataset
2023-11-06 16:19:45,481:INFO:Defining folds
2023-11-06 16:19:45,481:INFO:Declaring metric variables
2023-11-06 16:19:45,481:INFO:Importing untrained model
2023-11-06 16:19:45,481:INFO:Declaring custom model
2023-11-06 16:19:45,482:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-06 16:19:45,484:INFO:Cross validation set to False
2023-11-06 16:19:45,484:INFO:Fitting Model
2023-11-06 16:19:45,635:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2023-11-06 16:19:45,636:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000097 seconds.
2023-11-06 16:19:45,636:INFO:You can set `force_row_wise=true` to remove the overhead.
2023-11-06 16:19:45,636:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2023-11-06 16:19:45,636:INFO:[LightGBM] [Info] Total Bins 298
2023-11-06 16:19:45,636:INFO:[LightGBM] [Info] Number of data points in the train set: 13134, number of used features: 20
2023-11-06 16:19:45,637:INFO:[LightGBM] [Info] Start training from score 106.666495
2023-11-06 16:19:45,745:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['accommodates', 'minimum_nights',
                                             'maximum_nights'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood_group',
                                             'property_type', 'room_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 T...rhood_group',
                                             'room_type'],
                                    transformer=OneHotEncoder(cols=['neighbourhood_group',
                                                                    'room_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['property_type'],
                                    transformer=TargetEncoder(cols=['property_type'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 LGBMRegressor(n_jobs=-1, random_state=4527))])
2023-11-06 16:19:45,745:INFO:create_model() successfully completed......................................
2023-11-06 16:19:45,832:INFO:_master_model_container: 21
2023-11-06 16:19:45,833:INFO:_display_container: 4
2023-11-06 16:19:45,847:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['accommodates', 'minimum_nights',
                                             'maximum_nights'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood_group',
                                             'property_type', 'room_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 T...rhood_group',
                                             'room_type'],
                                    transformer=OneHotEncoder(cols=['neighbourhood_group',
                                                                    'room_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['property_type'],
                                    transformer=TargetEncoder(cols=['property_type'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 LGBMRegressor(n_jobs=-1, random_state=4527))])
2023-11-06 16:19:45,847:INFO:finalize_model() successfully completed......................................
